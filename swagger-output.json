{
  "openapi": "3.0.0",
  "info": {
    "title": "Documentación Colegio Catolico Api",
    "version": "1.0.0",
    "description": "Documentación de la API de gestor de pagos de Colegio Catolico"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Servidor local"
    }
  ],
  "paths": {
    "/acudiente/descBolsillo": {
      "post": {
        "summary": "Descuento del bolsillo de un acudiente",
        "tags": [
          "Acudiente"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idAcudiente": {
                    "type": "string",
                    "description": "ID del acudiente"
                  },
                  "cant": {
                    "type": "number",
                    "description": "Cantidad a descontar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Descuento aplicado con éxito"
          },
          "400": {
            "description": "Error en los datos enviados"
          }
        }
      }
    },
    "/acudiente/addBolsillo": {
      "put": {
        "summary": "Añadir dinero al bolsillo de un acudiente",
        "tags": [
          "Acudiente"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idAcudiente": {
                    "type": "string",
                    "description": "ID del acudiente"
                  },
                  "cant": {
                    "type": "number",
                    "description": "Cantidad a añadir"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cantidad añadida con éxito"
          },
          "400": {
            "description": "Error en los datos enviados"
          }
        }
      }
    },
    "/acudiente/getBolsillo": {
      "post": {
        "summary": "Obtener el bolsillo de un acudiente",
        "tags": [
          "Acudiente"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idAcudiente": {
                    "type": "string",
                    "description": "ID del acudiente"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bolsillo obtenido con éxito"
          },
          "400": {
            "description": "Error en los datos enviados"
          }
        }
      }
    },
    "/acudiente/getAcudientebyEstudiante": {
      "post": {
        "summary": "Obtener acudiente por ID de estudiante",
        "tags": [
          "Acudiente"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acudiente obtenido con éxito"
          },
          "400": {
            "description": "Error en los datos enviados"
          }
        }
      }
    },
    "/acudiente/actualizarAcudiente": {
      "put": {
        "summary": "Actualizar la información de un acudiente",
        "tags": [
          "Acudiente"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idAcudiente": {
                    "type": "string",
                    "description": "ID del acudiente"
                  },
                  "nombres": {
                    "type": "string",
                    "description": "Nombres del acudiente"
                  },
                  "apellidos": {
                    "type": "string",
                    "description": "Apellidos del acudiente"
                  },
                  "cargo": {
                    "type": "string",
                    "description": "Cargo del acudiente"
                  },
                  "celular": {
                    "type": "string",
                    "description": "Celular del acudiente"
                  },
                  "correoElectronico": {
                    "type": "string",
                    "description": "Correo electrónico del acudiente"
                  },
                  "direccion": {
                    "type": "string",
                    "description": "Dirección del acudiente"
                  },
                  "dondeTrabaja": {
                    "type": "string",
                    "description": "Lugar de trabajo del acudiente"
                  },
                  "identificacion": {
                    "type": "string",
                    "description": "Identificación del acudiente"
                  },
                  "ingresoMensual": {
                    "type": "number",
                    "description": "Ingreso mensual del acudiente"
                  },
                  "parentesco": {
                    "type": "string",
                    "description": "Parentesco con el estudiante"
                  },
                  "profesion": {
                    "type": "string",
                    "description": "Profesión del acudiente"
                  },
                  "telefono": {
                    "type": "string",
                    "description": "Teléfono del acudiente"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Información del acudiente actualizada con éxito"
          },
          "400": {
            "description": "Error en los datos enviados"
          }
        }
      }
    },
    "/acuerdos-pagos/listarAcuerdosPagos": {
      "get": {
        "summary": "Listar todos los acuerdos de pagos",
        "tags": [
          "Acuerdos de Pagos"
        ],
        "responses": {
          "200": {
            "description": "Lista de acuerdos de pagos obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener los acuerdos de pagos"
          }
        }
      }
    },
    "/acuerdos-pagos/listarAcuerdoPagoCuotas/{id}": {
      "get": {
        "summary": "Listar cuotas de un acuerdo de pago específico",
        "tags": [
          "Acuerdos de Pagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del acuerdo de pago"
          }
        ],
        "responses": {
          "200": {
            "description": "Cuotas del acuerdo de pago obtenidas con éxito"
          },
          "400": {
            "description": "Error al obtener las cuotas del acuerdo de pago"
          }
        }
      }
    },
    "/acuerdos-pagos/listarAcuerdoPago/{id}": {
      "get": {
        "summary": "Listar un acuerdo de pago específico",
        "tags": [
          "Acuerdos de Pagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del acuerdo de pago"
          }
        ],
        "responses": {
          "200": {
            "description": "Acuerdo de pago obtenido con éxito"
          },
          "400": {
            "description": "Error al obtener el acuerdo de pago"
          }
        }
      }
    },
    "/acuerdos-pagos/listarAcuerdoPagoByAcudiente/{id}": {
      "get": {
        "summary": "Listar acuerdos de pago por acudiente",
        "tags": [
          "Acuerdos de Pagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del acudiente"
          }
        ],
        "responses": {
          "200": {
            "description": "Acuerdos de pago por acudiente obtenidos con éxito"
          },
          "400": {
            "description": "Error al obtener los acuerdos de pago por acudiente"
          }
        }
      }
    },
    "/acuerdos-pagos/listarMatriculaAndPensionValue/{id}": {
      "get": {
        "summary": "Consultar valores de matrícula y pensión",
        "tags": [
          "Acuerdos de Pagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del acuerdo de pago"
          }
        ],
        "responses": {
          "200": {
            "description": "Valores de matrícula y pensión obtenidos con éxito"
          },
          "400": {
            "description": "Error al obtener los valores de matrícula y pensión"
          }
        }
      }
    },
    "/acuerdos-pagos/AcuerdoPago/{id}": {
      "put": {
        "summary": "Editar un acuerdo de pago",
        "tags": [
          "Acuerdos de Pagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del acuerdo de pago"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fecha": {
                    "type": "string",
                    "description": "Fecha del acuerdo de pago"
                  },
                  "description": {
                    "type": "string",
                    "description": "Descripción del acuerdo de pago"
                  },
                  "valor": {
                    "type": "number",
                    "description": "Valor del acuerdo de pago"
                  },
                  "estado": {
                    "type": "string",
                    "description": "Estado del acuerdo de pago"
                  },
                  "idAcudiente": {
                    "type": "string",
                    "description": "ID del acudiente relacionado con el acuerdo de pago"
                  },
                  "cuotas": {
                    "type": "number",
                    "description": "Número de cuotas del acuerdo de pago"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acuerdo de pago editado con éxito"
          },
          "400": {
            "description": "Error al editar el acuerdo de pago"
          }
        }
      }
    },
    "/acuerdos-pagos/AcuerdoPago": {
      "post": {
        "summary": "Crear un nuevo acuerdo de pago",
        "tags": [
          "Acuerdos de Pagos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fecha": {
                    "type": "string",
                    "description": "Fecha del acuerdo de pago"
                  },
                  "description": {
                    "type": "string",
                    "description": "Descripción del acuerdo de pago"
                  },
                  "valor": {
                    "type": "number",
                    "description": "Valor del acuerdo de pago"
                  },
                  "estado": {
                    "type": "string",
                    "description": "Estado del acuerdo de pago"
                  },
                  "idAcudiente": {
                    "type": "string",
                    "description": "ID del acudiente relacionado con el acuerdo de pago"
                  },
                  "cuotas": {
                    "type": "number",
                    "description": "Número de cuotas del acuerdo de pago"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Acuerdo de pago creado con éxito"
          },
          "400": {
            "description": "Error al crear el acuerdo de pago"
          }
        }
      }
    },
    "/acuerdos-pagos/AcuerdoPagoSearch/{dato}/{id}": {
      "get": {
        "summary": "Buscar un acuerdo de pago por dato e ID",
        "tags": [
          "Acuerdos de Pagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dato",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Dato a buscar"
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del acuerdo de pago"
          }
        ],
        "responses": {
          "200": {
            "description": "Acuerdo de pago encontrado con éxito"
          },
          "400": {
            "description": "Error al buscar el acuerdo de pago"
          }
        }
      }
    },
    "/aptitudes/listarAptitudes": {
      "get": {
        "summary": "Listar todas las aptitudes",
        "tags": [
          "Aptitudes"
        ],
        "responses": {
          "200": {
            "description": "Lista de aptitudes obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener las aptitudes"
          }
        }
      }
    },
    "/aptitudes/crearAptitudes": {
      "post": {
        "summary": "Crear nuevas aptitudes",
        "tags": [
          "Aptitudes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deporteGusto": {
                    "type": "string",
                    "description": "Deporte de gusto"
                  },
                  "arteGusto": {
                    "type": "string",
                    "description": "Arte de gusto"
                  },
                  "distincionDeporte": {
                    "type": "string",
                    "description": "Distinción en deportes"
                  },
                  "distincionArtistica": {
                    "type": "string",
                    "description": "Distinción artística"
                  },
                  "pasatiempos": {
                    "type": "string",
                    "description": "Pasatiempos"
                  },
                  "coleccion": {
                    "type": "string",
                    "description": "Colección"
                  },
                  "estadoSalud": {
                    "type": "string",
                    "description": "Estado de salud"
                  },
                  "enfermedades": {
                    "type": "string",
                    "description": "Enfermedades"
                  },
                  "medicamentos": {
                    "type": "string",
                    "description": "Medicamentos"
                  },
                  "limitacionEducacionFisica": {
                    "type": "string",
                    "description": "Limitaciones en educación física"
                  },
                  "tipoSangre": {
                    "type": "string",
                    "description": "Tipo de sangre"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante asociado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Aptitudes creadas con éxito"
          },
          "400": {
            "description": "Error al crear las aptitudes"
          }
        }
      }
    },
    "/aptitudes/listarAptitudesId/{id}": {
      "get": {
        "summary": "Listar aptitudes por ID",
        "tags": [
          "Aptitudes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de las aptitudes"
          }
        ],
        "responses": {
          "200": {
            "description": "Aptitudes obtenidas con éxito"
          },
          "400": {
            "description": "Error al obtener las aptitudes"
          }
        }
      }
    },
    "/aptitudes/actualizarAptitudes/{id}": {
      "put": {
        "summary": "Actualizar aptitudes por ID",
        "tags": [
          "Aptitudes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de las aptitudes a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deporteGusto": {
                    "type": "string",
                    "description": "Deporte de gusto"
                  },
                  "arteGusto": {
                    "type": "string",
                    "description": "Arte de gusto"
                  },
                  "distincionDeporte": {
                    "type": "string",
                    "description": "Distinción en deportes"
                  },
                  "distincionArtistica": {
                    "type": "string",
                    "description": "Distinción artística"
                  },
                  "pasatiempos": {
                    "type": "string",
                    "description": "Pasatiempos"
                  },
                  "coleccion": {
                    "type": "string",
                    "description": "Colección"
                  },
                  "estadoSalud": {
                    "type": "string",
                    "description": "Estado de salud"
                  },
                  "enfermedades": {
                    "type": "string",
                    "description": "Enfermedades"
                  },
                  "medicamentos": {
                    "type": "string",
                    "description": "Medicamentos"
                  },
                  "limitacionEducacionFisica": {
                    "type": "string",
                    "description": "Limitaciones en educación física"
                  },
                  "tipoSangre": {
                    "type": "string",
                    "description": "Tipo de sangre"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante asociado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Aptitudes actualizadas con éxito"
          },
          "400": {
            "description": "Error al actualizar las aptitudes"
          }
        }
      }
    },
    "/aptitudes/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilitar aptitudes por ID",
        "tags": [
          "Aptitudes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de las aptitudes a deshabilitar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado activo/inactivo de las aptitudes"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Aptitudes deshabilitadas con éxito"
          },
          "400": {
            "description": "Error al deshabilitar las aptitudes"
          }
        }
      }
    },
    "/attendingManagements/listarAttendingManagements": {
      "get": {
        "summary": "Listar todas las gestiones de asistencia",
        "tags": [
          "Attending Management"
        ],
        "responses": {
          "200": {
            "description": "Lista de gestiones de asistencia obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener las gestiones de asistencia"
          }
        }
      }
    },
    "/attendingManagements/listarAttendingManagement/{nombres}": {
      "get": {
        "summary": "Listar gestiones de asistencia por nombres",
        "tags": [
          "Attending Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "nombres",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Nombres de la gestión de asistencia a consultar"
          }
        ],
        "responses": {
          "200": {
            "description": "Gestión de asistencia obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener la gestión de asistencia"
          }
        }
      }
    },
    "/attendingManagements/listarAttendingManagementId/{id}": {
      "get": {
        "summary": "Listar gestión de asistencia por ID",
        "tags": [
          "Attending Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la gestión de asistencia a consultar"
          }
        ],
        "responses": {
          "200": {
            "description": "Gestión de asistencia obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener la gestión de asistencia"
          }
        }
      }
    },
    "/attendingManagements/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilitar gestión de asistencia por ID",
        "tags": [
          "Attending Management"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la gestión de asistencia a deshabilitar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado activo/inactivo de la gestión de asistencia"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gestión de asistencia deshabilitada con éxito"
          },
          "400": {
            "description": "Error al deshabilitar la gestión de asistencia"
          }
        }
      }
    },
    "/avalpay/payment": {
      "post": {
        "summary": "Realizar un pago",
        "tags": [
          "Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Monto del pago",
                    "example": 100.5
                  },
                  "invoiceType": {
                    "type": "string",
                    "description": "Tipo de factura",
                    "example": "Factura Electrónica"
                  },
                  "portalURL": {
                    "type": "string",
                    "description": "URL del portal de pagos",
                    "example": "https://portal.pagos.com"
                  },
                  "desc": {
                    "type": "string",
                    "description": "Descripción del pago",
                    "example": "Pago por servicios"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pago realizado con éxito"
          },
          "400": {
            "description": "Error en la solicitud de pago"
          }
        }
      }
    },
    "/avalpay/paymentStatus/{pmtId}": {
      "get": {
        "summary": "Consultar el estado de un pago",
        "tags": [
          "Payments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pmtId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del pago a consultar"
          }
        ],
        "responses": {
          "200": {
            "description": "Estado del pago obtenido con éxito"
          },
          "400": {
            "description": "Error al obtener el estado del pago"
          }
        }
      }
    },
    "/cafeteria/listarCafeterias": {
      "get": {
        "summary": "Listar todas las cafeterías",
        "tags": [
          "Cafeteria"
        ],
        "responses": {
          "200": {
            "description": "Lista de cafeterías obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener las cafeterías"
          }
        }
      }
    },
    "/cafeteria/listarCafeteria/{routeName}": {
      "get": {
        "summary": "Consultar una cafetería por nombre de ruta",
        "tags": [
          "Cafeteria"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routeName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Nombre de la ruta de la cafetería a consultar"
          }
        ],
        "responses": {
          "200": {
            "description": "Cafetería obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener la cafetería"
          }
        }
      }
    },
    "/cafeteria/listarCafeteriaId/{id}": {
      "get": {
        "summary": "Consultar una cafetería por ID",
        "tags": [
          "Cafeteria"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la cafetería a consultar"
          }
        ],
        "responses": {
          "200": {
            "description": "Cafetería obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener la cafetería"
          }
        }
      }
    },
    "/cafeteria/crearCafeteria": {
      "post": {
        "summary": "Crear una nueva cafetería",
        "tags": [
          "Cafeteria"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Descripción de la cafetería",
                    "example": "Cafetería en el centro de la ciudad"
                  },
                  "pay": {
                    "type": "number",
                    "description": "Monto de pago de la cafetería",
                    "example": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cafetería creada con éxito"
          },
          "400": {
            "description": "Error al crear la cafetería"
          }
        }
      }
    },
    "/cafeteria/actualizarCafeteria/{id}": {
      "put": {
        "summary": "Actualizar una cafetería existente",
        "tags": [
          "Cafeteria"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la cafetería a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Descripción de la cafetería",
                    "example": "Cafetería en el centro de la ciudad"
                  },
                  "pay": {
                    "type": "number",
                    "description": "Monto de pago de la cafetería",
                    "example": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cafetería actualizada con éxito"
          },
          "400": {
            "description": "Error al actualizar la cafetería"
          }
        }
      }
    },
    "/cafeteria/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilitar una cafetería por ID",
        "tags": [
          "Cafeteria"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la cafetería a deshabilitar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado activo/inactivo de la cafetería",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cafetería deshabilitada con éxito"
          },
          "400": {
            "description": "Error al deshabilitar la cafetería"
          }
        }
      }
    },
    "/cafeteriaPagos/crearPago": {
      "post": {
        "summary": "Crear un nuevo pago",
        "tags": [
          "Cafeteria Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string",
                    "description": "Datos del pago",
                    "example": "Datos del pago en JSON"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante asociado al pago",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pago creado con éxito"
          },
          "400": {
            "description": "Error al crear el pago"
          }
        }
      }
    },
    "/cafeteriaPagos/getPagos": {
      "get": {
        "summary": "Obtener todos los pagos",
        "tags": [
          "Cafeteria Payments"
        ],
        "responses": {
          "200": {
            "description": "Lista de pagos obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener los pagos"
          }
        }
      }
    },
    "/cafeteriaPagos/listPagoSearch/{dato}": {
      "get": {
        "summary": "Buscar pagos por un dato específico",
        "tags": [
          "Cafeteria Payments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dato",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Dato para buscar pagos"
          }
        ],
        "responses": {
          "200": {
            "description": "Resultado de la búsqueda de pagos obtenido con éxito"
          },
          "400": {
            "description": "Error al buscar pagos"
          }
        }
      }
    },
    "/cafeteriaPagos/entregarTarjeta/{id}": {
      "get": {
        "summary": "Entregar tarjeta a un estudiante",
        "tags": [
          "Cafeteria Payments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del pago o del estudiante asociado a la tarjeta"
          }
        ],
        "responses": {
          "200": {
            "description": "Tarjeta entregada con éxito"
          },
          "400": {
            "description": "Error al entregar la tarjeta"
          }
        }
      }
    },
    "/canalReferencia/listarCanalReferencias": {
      "get": {
        "summary": "Listar todos los canales de referencia",
        "tags": [
          "Canal Referencia"
        ],
        "responses": {
          "200": {
            "description": "Lista de canales de referencia obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener los canales de referencia"
          }
        }
      }
    },
    "/canalReferencia/listarCanalReferencia/{routeName}": {
      "get": {
        "summary": "Consultar un canal de referencia por nombre de ruta",
        "tags": [
          "Canal Referencia"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routeName",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Nombre de la ruta del canal de referencia"
          }
        ],
        "responses": {
          "200": {
            "description": "Canal de referencia obtenido con éxito"
          },
          "400": {
            "description": "Error al obtener el canal de referencia"
          }
        }
      }
    },
    "/canalReferencia/listarCanalReferenciaId/{id}": {
      "get": {
        "summary": "Consultar un canal de referencia por ID",
        "tags": [
          "Canal Referencia"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del canal de referencia"
          }
        ],
        "responses": {
          "200": {
            "description": "Canal de referencia obtenido con éxito"
          },
          "400": {
            "description": "Error al obtener el canal de referencia"
          }
        }
      }
    },
    "/canalReferencia/crearCanalReferencia": {
      "post": {
        "summary": "Crear un nuevo canal de referencia",
        "tags": [
          "Canal Referencia"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comoSeEntero": {
                    "type": "string",
                    "description": "Cómo se enteró del canal",
                    "example": "A través de un amigo"
                  },
                  "comoSabe": {
                    "type": "string",
                    "description": "Cómo sabe sobre el canal",
                    "example": "Por redes sociales"
                  },
                  "porqueIngresar": {
                    "type": "string",
                    "description": "Razón para ingresar",
                    "example": "Buena reputación"
                  },
                  "nombreAcudiente": {
                    "type": "string",
                    "description": "Nombre del acudiente",
                    "example": "Juan Pérez"
                  },
                  "aceptaCompromisos": {
                    "type": "string",
                    "description": "Aceptación de compromisos",
                    "example": "Sí"
                  },
                  "estadoPago": {
                    "type": "string",
                    "description": "Estado del pago",
                    "example": "Pendiente"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Canal de referencia creado con éxito"
          },
          "400": {
            "description": "Error al crear el canal de referencia"
          }
        }
      }
    },
    "/canalReferencia/actualizarCanalReferencia/{id}": {
      "put": {
        "summary": "Actualizar un canal de referencia por ID",
        "tags": [
          "Canal Referencia"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del canal de referencia"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comoSeEntero": {
                    "type": "string",
                    "description": "Cómo se enteró del canal",
                    "example": "A través de un amigo"
                  },
                  "comoSabe": {
                    "type": "string",
                    "description": "Cómo sabe sobre el canal",
                    "example": "Por redes sociales"
                  },
                  "porqueIngresar": {
                    "type": "string",
                    "description": "Razón para ingresar",
                    "example": "Buena reputación"
                  },
                  "nombreAcudiente": {
                    "type": "string",
                    "description": "Nombre del acudiente",
                    "example": "Juan Pérez"
                  },
                  "aceptaCompromisos": {
                    "type": "string",
                    "description": "Aceptación de compromisos",
                    "example": "Sí"
                  },
                  "estadoPago": {
                    "type": "string",
                    "description": "Estado del pago",
                    "example": "Pendiente"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Canal de referencia actualizado con éxito"
          },
          "400": {
            "description": "Error al actualizar el canal de referencia"
          }
        }
      }
    },
    "/canalReferencia/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilitar un canal de referencia",
        "tags": [
          "Canal Referencia"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del canal de referencia a deshabilitar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de activación del canal",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Canal de referencia deshabilitado con éxito"
          },
          "400": {
            "description": "Error al deshabilitar el canal de referencia"
          }
        }
      }
    },
    "/certificate/listarCertificates": {
      "get": {
        "summary": "Listar todos los certificados",
        "tags": [
          "Certificates"
        ],
        "responses": {
          "200": {
            "description": "Lista de certificados obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener los certificados"
          }
        }
      }
    },
    "/certificate/listCertificatesInscription": {
      "get": {
        "summary": "Listar todas las inscripciones de certificados",
        "tags": [
          "Certificates"
        ],
        "responses": {
          "200": {
            "description": "Lista de inscripciones obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener las inscripciones"
          }
        }
      }
    },
    "/certificate/listarCertificatesAcu": {
      "get": {
        "summary": "Listar certificados para acudientes",
        "tags": [
          "Certificates"
        ],
        "responses": {
          "200": {
            "description": "Lista de certificados obtenida con éxito para los acudientes"
          },
          "400": {
            "description": "Error al obtener los certificados"
          }
        }
      }
    },
    "/certificate/listCertificatesInscription/{id}": {
      "get": {
        "summary": "Consultar una inscripción de certificado por ID",
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la inscripción del certificado"
          }
        ],
        "responses": {
          "200": {
            "description": "Inscripción obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener la inscripción"
          }
        }
      }
    },
    "/certificate/listarCertificate/{concept}": {
      "get": {
        "summary": "Consultar un certificado por concepto",
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "concept",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Concepto del certificado"
          }
        ],
        "responses": {
          "200": {
            "description": "Certificado obtenido con éxito"
          },
          "400": {
            "description": "Error al obtener el certificado"
          }
        }
      }
    },
    "/certificate/listarCertificateId/{id}": {
      "get": {
        "summary": "Consultar un certificado por ID",
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del certificado"
          }
        ],
        "responses": {
          "200": {
            "description": "Certificado obtenido con éxito"
          },
          "400": {
            "description": "Error al obtener el certificado"
          }
        }
      }
    },
    "/certificate/certificateInscriptionId/{id}": {
      "get": {
        "summary": "Consultar una inscripción de certificado por ID",
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la inscripción del certificado"
          }
        ],
        "responses": {
          "200": {
            "description": "Inscripción de certificado obtenida con éxito"
          },
          "400": {
            "description": "Error al obtener la inscripción de certificado"
          }
        }
      }
    },
    "/certificate/crearCertificate": {
      "post": {
        "summary": "Crear un nuevo certificado",
        "tags": [
          "Certificates"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "concept": {
                    "type": "string",
                    "description": "Concepto del certificado",
                    "example": "Certificado de estudios"
                  },
                  "time": {
                    "type": "string",
                    "description": "Tiempo de emisión",
                    "example": "2024-08-21"
                  },
                  "channel": {
                    "type": "string",
                    "description": "Canal de emisión",
                    "example": "Online"
                  },
                  "applicant": {
                    "type": "string",
                    "description": "Solicitante del certificado",
                    "example": "Juan Pérez"
                  },
                  "price": {
                    "type": "string",
                    "description": "Precio del certificado",
                    "example": "100"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Certificado creado con éxito"
          },
          "400": {
            "description": "Error al crear el certificado"
          }
        }
      }
    },
    "/certificate/actualizarCertificate/{id}": {
      "put": {
        "summary": "Actualizar un certificado por ID",
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del certificado a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "concept": {
                    "type": "string",
                    "description": "Concepto del certificado",
                    "example": "Certificado de estudios"
                  },
                  "time": {
                    "type": "string",
                    "description": "Tiempo de emisión",
                    "example": "2024-08-21"
                  },
                  "channel": {
                    "type": "string",
                    "description": "Canal de emisión",
                    "example": "Online"
                  },
                  "applicant": {
                    "type": "string",
                    "description": "Solicitante del certificado",
                    "example": "Juan Pérez"
                  },
                  "price": {
                    "type": "string",
                    "description": "Precio del certificado",
                    "example": "100"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Certificado actualizado con éxito"
          },
          "400": {
            "description": "Error al actualizar el certificado"
          }
        }
      }
    },
    "/certificate/actualizarCertificateInscription/{id}": {
      "put": {
        "summary": "Actualizar la inscripción de un certificado por ID",
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la inscripción del certificado a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentUrl": {
                    "type": "string",
                    "description": "URL del documento",
                    "example": "http://example.com/document.pdf"
                  },
                  "status": {
                    "type": "string",
                    "description": "Estado de la inscripción",
                    "example": "Pendiente"
                  },
                  "paid": {
                    "type": "string",
                    "description": "Estado del pago",
                    "example": "No pagado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inscripción de certificado actualizada con éxito"
          },
          "400": {
            "description": "Error al actualizar la inscripción de certificado"
          }
        }
      }
    },
    "/certificate/actualizarCertificateInscriptionPaid/{id}": {
      "put": {
        "summary": "Actualizar el estado de pago de una inscripción de certificado por ID",
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID de la inscripción del certificado a actualizar el pago"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paid": {
                    "type": "string",
                    "description": "Estado del pago",
                    "example": "Pagado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estado de pago actualizado con éxito"
          },
          "400": {
            "description": "Error al actualizar el estado de pago"
          }
        }
      }
    },
    "/certificate/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilitar un certificado por ID",
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del certificado a deshabilitar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de habilitación",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Certificado deshabilitado con éxito"
          },
          "400": {
            "description": "Error al deshabilitar el certificado"
          }
        }
      }
    },
    "/certificate/inscriptionAllSearch/{dato}/{id}": {
      "get": {
        "summary": "Buscar inscripciones de certificados por dato y ID",
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dato",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Dato a buscar"
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del certificado"
          }
        ],
        "responses": {
          "200": {
            "description": "Inscripciones obtenidas con éxito"
          },
          "400": {
            "description": "Error al buscar las inscripciones"
          }
        }
      }
    },
    "/certificate/pago": {
      "post": {
        "summary": "Crear un nuevo pago de certificado",
        "tags": [
          "Certificates"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "monto": {
                    "type": "string",
                    "description": "Monto del pago",
                    "example": "200"
                  },
                  "canalEntrega": {
                    "type": "string",
                    "description": "Canal de entrega",
                    "example": "Presencial"
                  },
                  "detalle": {
                    "type": "string",
                    "description": "Detalle del pago",
                    "example": "Pago completo"
                  },
                  "idCerticate": {
                    "type": "string",
                    "description": "ID del certificado",
                    "example": "1"
                  },
                  "idGrade": {
                    "type": "string",
                    "description": "ID del grado",
                    "example": "3"
                  },
                  "metodoPago": {
                    "type": "string",
                    "description": "Método de pago",
                    "example": "Tarjeta"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante",
                    "example": "12345"
                  },
                  "paymentCode": {
                    "type": "string",
                    "description": "Código de pago",
                    "example": "PAY123456"
                  },
                  "paid": {
                    "type": "boolean",
                    "description": "Estado del pago",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pago creado con éxito"
          },
          "400": {
            "description": "Error al crear el pago"
          }
        }
      }
    },
    "/certificate/{id}": {
      "put": {
        "summary": "Cambiar el estado de un certificado por ID",
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del certificado"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Nuevo estado del certificado",
                    "example": "Aprobado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estado del certificado actualizado con éxito"
          },
          "400": {
            "description": "Error al cambiar el estado del certificado"
          }
        }
      }
    },
    "/course/listarCourses": {
      "get": {
        "tags": [
          "Cursos"
        ],
        "summary": "Consultar todos los cursos",
        "description": "Obtener una lista de todos los cursos disponibles.",
        "responses": {
          "200": {
            "description": "Lista de cursos obtenida con éxito"
          },
          "500": {
            "description": "Error al obtener los cursos"
          }
        }
      }
    },
    "/course/listarCourse/{typeCourse}": {
      "get": {
        "tags": [
          "Cursos"
        ],
        "summary": "Consultar curso por tipo",
        "description": "Obtener un curso específico por su tipo.",
        "parameters": [
          {
            "name": "typeCourse",
            "in": "path",
            "required": true,
            "description": "Tipo del curso",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Curso encontrado"
          },
          "404": {
            "description": "Curso no encontrado"
          }
        }
      }
    },
    "/course/listarAsignature/{asignature}": {
      "get": {
        "tags": [
          "Cursos"
        ],
        "summary": "Consultar cursos por asignatura",
        "description": "Obtener cursos específicos por asignatura.",
        "parameters": [
          {
            "name": "asignature",
            "in": "path",
            "required": true,
            "description": "Asignatura del curso",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cursos encontrados"
          },
          "404": {
            "description": "Cursos no encontrados"
          }
        }
      }
    },
    "/course/listarAsignatureId/{id}": {
      "get": {
        "tags": [
          "Cursos"
        ],
        "summary": "Consultar curso por ID",
        "description": "Obtener un curso específico por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del curso",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Curso encontrado"
          },
          "404": {
            "description": "Curso no encontrado"
          }
        }
      }
    },
    "/courses/crearCourse": {
      "post": {
        "tags": [
          "Cursos"
        ],
        "summary": "Crear un nuevo curso",
        "description": "Crear un nuevo curso con la información proporcionada.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "asignature": {
                    "type": "string"
                  },
                  "starDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "finalDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "price": {
                    "type": "number"
                  },
                  "idTeacher": {
                    "type": "string"
                  },
                  "typeCourse": {
                    "type": "string"
                  },
                  "starHour": {
                    "type": "string",
                    "format": "time"
                  },
                  "finalHour": {
                    "type": "string",
                    "format": "time"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Curso creado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/course/actualizarCourse/{id}": {
      "put": {
        "tags": [
          "Cursos"
        ],
        "summary": "Actualizar curso",
        "description": "Actualizar los datos de un curso existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del curso a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "asignature": {
                    "type": "string"
                  },
                  "starDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "finalDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "price": {
                    "type": "number"
                  },
                  "idTeacher": {
                    "type": "string"
                  },
                  "typeCourse": {
                    "type": "string"
                  },
                  "starHour": {
                    "type": "string",
                    "format": "time"
                  },
                  "finalHour": {
                    "type": "string",
                    "format": "time"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Curso actualizado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Curso no encontrado"
          }
        }
      }
    },
    "/course/deshabilitar/{id}": {
      "put": {
        "tags": [
          "Cursos"
        ],
        "summary": "Deshabilitar curso",
        "description": "Deshabilitar un curso existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del curso a deshabilitar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Curso deshabilitado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Curso no encontrado"
          }
        }
      }
    },
    "/course/pago": {
      "post": {
        "tags": [
          "Cursos"
        ],
        "summary": "Registrar un pago",
        "description": "Registrar el pago de un curso.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "monto": {
                    "type": "number"
                  },
                  "idCourse": {
                    "type": "string"
                  },
                  "metodoPago": {
                    "type": "string"
                  },
                  "idEstudiante": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pago registrado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/deudas/listarDeudas": {
      "get": {
        "tags": [
          "Deudas"
        ],
        "summary": "Consultar todas las deudas",
        "description": "Obtener una lista de todas las deudas registradas.",
        "responses": {
          "200": {
            "description": "Lista de deudas obtenida con éxito"
          },
          "500": {
            "description": "Error al obtener las deudas"
          }
        }
      }
    },
    "/deudas/listarDeuda/{id}": {
      "get": {
        "tags": [
          "Deudas"
        ],
        "summary": "Consultar deuda por ID",
        "description": "Obtener una deuda específica por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la deuda",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deuda encontrada"
          },
          "404": {
            "description": "Deuda no encontrada"
          }
        }
      }
    },
    "/deudas/crearDeudas": {
      "post": {
        "tags": [
          "Deudas"
        ],
        "summary": "Crear una nueva deuda",
        "description": "Crear una nueva deuda con la información proporcionada.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deudaCode": {
                    "type": "string"
                  },
                  "concepto": {
                    "type": "string"
                  },
                  "fechaInicio": {
                    "type": "string",
                    "format": "date"
                  },
                  "fechaFinal": {
                    "type": "string",
                    "format": "date"
                  },
                  "monto": {
                    "type": "number"
                  },
                  "cobro": {
                    "type": "string"
                  },
                  "estado": {
                    "type": "string"
                  },
                  "cobroValue": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Deuda creada con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/deudas/editarDeuda/{id}": {
      "put": {
        "tags": [
          "Deudas"
        ],
        "summary": "Editar deuda",
        "description": "Editar los datos de una deuda existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID de la deuda a editar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deudaCode": {
                    "type": "string"
                  },
                  "concepto": {
                    "type": "string"
                  },
                  "fechaInicio": {
                    "type": "string",
                    "format": "date"
                  },
                  "fechaFinal": {
                    "type": "string",
                    "format": "date"
                  },
                  "monto": {
                    "type": "number"
                  },
                  "cobro": {
                    "type": "string"
                  },
                  "estado": {
                    "type": "string"
                  },
                  "cobroValue": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deuda actualizada con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Deuda no encontrada"
          }
        }
      }
    },
    "/discount/listarDiscounts": {
      "get": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Consultar todos los descuentos",
        "description": "Obtener una lista de todos los descuentos registrados.",
        "responses": {
          "200": {
            "description": "Lista de descuentos obtenida con éxito"
          },
          "500": {
            "description": "Error al obtener los descuentos"
          }
        }
      }
    },
    "/discount/listarDiscount/{name}": {
      "get": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Consultar descuento por nombre",
        "description": "Obtener un descuento específico por su nombre.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Nombre del descuento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Descuento encontrado"
          },
          "404": {
            "description": "Descuento no encontrado"
          }
        }
      }
    },
    "/discount/listarDiscountId/{id}": {
      "get": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Consultar descuento por ID",
        "description": "Obtener un descuento específico por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del descuento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Descuento encontrado"
          },
          "404": {
            "description": "Descuento no encontrado"
          }
        }
      }
    },
    "/discount/crearDiscount": {
      "post": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Crear un nuevo descuento",
        "description": "Crear un nuevo descuento con la información proporcionada.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "starDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "finalDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "percentage": {
                    "type": "number"
                  },
                  "useType": {
                    "type": "string",
                    "nullable": true
                  },
                  "frequency": {
                    "type": "string"
                  },
                  "service": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Descuento creado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/discount/actualizarDiscount/{id}": {
      "put": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Actualizar descuento",
        "description": "Actualizar los datos de un descuento existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del descuento a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "starDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "finalDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "percentage": {
                    "type": "number"
                  },
                  "useType": {
                    "type": "string"
                  },
                  "frequency": {
                    "type": "string"
                  },
                  "service": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Descuento actualizado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Descuento no encontrado"
          }
        }
      }
    },
    "/discount/deshabilitar/{id}": {
      "put": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Deshabilitar descuento",
        "description": "Deshabilitar un descuento existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del descuento a deshabilitar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Descuento deshabilitado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Descuento no encontrado"
          }
        }
      }
    },
    "/discount/eliminar/{id}": {
      "delete": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Eliminar descuento",
        "description": "Eliminar un descuento por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del descuento a eliminar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Descuento eliminado con éxito"
          },
          "404": {
            "description": "Descuento no encontrado"
          }
        }
      }
    },
    "/documentos/listarDocumentos": {
      "get": {
        "tags": [
          "Documentos"
        ],
        "summary": "Listar todos los documentos",
        "description": "Obtener una lista de todos los documentos almacenados.",
        "responses": {
          "200": {
            "description": "Lista de documentos obtenida con éxito"
          },
          "500": {
            "description": "Error al obtener los documentos"
          }
        }
      }
    },
    "/documentos/crearDocumentos": {
      "post": {
        "tags": [
          "Documentos"
        ],
        "summary": "Crear un nuevo documento",
        "description": "Crear un nuevo documento con la información proporcionada.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string",
                    "description": "Título del documento"
                  },
                  "template": {
                    "type": "string",
                    "description": "Plantilla del documento"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Documento creado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/documentos/listarDocumentos/{id}": {
      "get": {
        "tags": [
          "Documentos"
        ],
        "summary": "Obtener documento por ID",
        "description": "Obtener un documento específico por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del documento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documento obtenido con éxito"
          },
          "404": {
            "description": "Documento no encontrado"
          }
        }
      }
    },
    "/documentos/actualizarDocumento/{id}": {
      "put": {
        "tags": [
          "Documentos"
        ],
        "summary": "Actualizar un documento",
        "description": "Actualizar la información de un documento existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del documento a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string",
                    "description": "Título del documento"
                  },
                  "template": {
                    "type": "string",
                    "description": "Plantilla del documento"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Documento actualizado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Documento no encontrado"
          }
        }
      }
    },
    "/documentos/crearPDFDocumento/{id}": {
      "post": {
        "tags": [
          "Documentos"
        ],
        "summary": "Crear PDF de un documento",
        "description": "Generar un archivo PDF basado en el documento especificado por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del documento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PDF creado con éxito"
          },
          "404": {
            "description": "Documento no encontrado"
          }
        }
      }
    },
    "/documentos/downloadPDFDocumento/{filename}": {
      "get": {
        "tags": [
          "Documentos"
        ],
        "summary": "Descargar PDF de un documento",
        "description": "Descargar el archivo PDF del documento especificado.",
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "description": "Nombre del archivo PDF",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PDF descargado con éxito"
          },
          "404": {
            "description": "Archivo no encontrado"
          }
        }
      }
    },
    "/documentosmatricula": {
      "post": {
        "tags": [
          "DocumentosMatricula"
        ],
        "summary": "Crear un nuevo documento de matrícula",
        "description": "Crear un nuevo documento de matrícula con la información proporcionada.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Título del documento"
                  },
                  "canViewType": {
                    "type": "string",
                    "description": "Tipo de vista permitida"
                  },
                  "canViewValue": {
                    "type": "string",
                    "description": "Valor de la vista permitida"
                  },
                  "documentoid": {
                    "type": "string",
                    "description": "ID del documento asociado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Documento de matrícula creado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      },
      "get": {
        "tags": [
          "DocumentosMatricula"
        ],
        "summary": "Listar todos los documentos de matrícula",
        "description": "Obtener una lista de todos los documentos de matrícula almacenados.",
        "responses": {
          "200": {
            "description": "Lista de documentos de matrícula obtenida con éxito"
          },
          "500": {
            "description": "Error al obtener los documentos"
          }
        }
      }
    },
    "/documentosmatricula/{id}": {
      "get": {
        "tags": [
          "DocumentosMatricula"
        ],
        "summary": "Obtener documento de matrícula por ID",
        "description": "Obtener un documento de matrícula específico por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del documento de matrícula",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documento de matrícula obtenido con éxito"
          },
          "404": {
            "description": "Documento de matrícula no encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "DocumentosMatricula"
        ],
        "summary": "Actualizar un documento de matrícula",
        "description": "Actualizar la información de un documento de matrícula existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del documento de matrícula a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado del documento (activo o inactivo)"
                  },
                  "title": {
                    "type": "string",
                    "description": "Título del documento"
                  },
                  "canViewType": {
                    "type": "string",
                    "description": "Tipo de vista permitida"
                  },
                  "canViewValue": {
                    "type": "string",
                    "description": "Valor de la vista permitida"
                  },
                  "documentoid": {
                    "type": "string",
                    "description": "ID del documento asociado"
                  },
                  "canViewTuitionType": {
                    "type": "string",
                    "description": "Tipo de vista de matrícula permitida"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Documento de matrícula actualizado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Documento de matrícula no encontrado"
          }
        }
      }
    },
    "/documentosMatricula/student/{studentId}": {
      "get": {
        "tags": [
          "DocumentosMatricula"
        ],
        "summary": "Obtener documentos de matrícula por ID del estudiante",
        "description": "Obtener todos los documentos de matrícula asociados a un estudiante específico.",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "description": "ID del estudiante",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documentos de matrícula obtenidos con éxito"
          },
          "404": {
            "description": "Estudiante no encontrado"
          }
        }
      }
    },
    "/extracurricular/listarExtracurricular": {
      "get": {
        "summary": "Listar todas las actividades extracurriculares",
        "tags": [
          "Extracurriculares"
        ],
        "responses": {
          "200": {
            "description": "Lista de todas las actividades extracurriculares"
          },
          "401": {
            "description": "No autorizado"
          }
        }
      }
    },
    "/extracurricular/crearExtracurricular": {
      "post": {
        "summary": "Crear una nueva actividad extracurricular",
        "tags": [
          "Extracurriculares"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "activity",
                  "startDate",
                  "finalDate",
                  "price",
                  "idTeacher",
                  "imagen"
                ],
                "properties": {
                  "activity": {
                    "type": "string",
                    "description": "Nombre de la actividad"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de inicio de la actividad"
                  },
                  "finalDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de finalización de la actividad"
                  },
                  "price": {
                    "type": "number",
                    "description": "Precio de la actividad"
                  },
                  "information": {
                    "type": "string",
                    "description": "Información adicional de la actividad (opcional)"
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Horario de la actividad (opcional)"
                  },
                  "idTeacher": {
                    "type": "integer",
                    "description": "ID del profesor encargado"
                  },
                  "imagen": {
                    "type": "string",
                    "description": "URL de la imagen de la actividad"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Actividad creada exitosamente"
          },
          "400": {
            "description": "Error en la validación"
          }
        }
      }
    },
    "/extracurricular/pago": {
      "post": {
        "summary": "Realizar el pago de una actividad extracurricular",
        "tags": [
          "Extracurriculares"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "monto",
                  "idExtracurricular",
                  "metodoPago",
                  "idEstudiante",
                  "isActive"
                ],
                "properties": {
                  "monto": {
                    "type": "number",
                    "description": "Monto del pago"
                  },
                  "idExtracurricular": {
                    "type": "integer",
                    "description": "ID de la actividad extracurricular"
                  },
                  "metodoPago": {
                    "type": "string",
                    "description": "Método de pago"
                  },
                  "idEstudiante": {
                    "type": "integer",
                    "description": "ID del estudiante que realiza el pago"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de la inscripción"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pago realizado exitosamente"
          },
          "400": {
            "description": "Error en la validación"
          }
        }
      }
    },
    "/extracurricular/misExtracurriculares": {
      "post": {
        "summary": "Obtener actividades extracurriculares inscritas por un estudiante",
        "tags": [
          "Extracurriculares"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "idEstudiante"
                ],
                "properties": {
                  "idEstudiante": {
                    "type": "integer",
                    "description": "ID del estudiante"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lista de actividades inscritas por el estudiante"
          },
          "400": {
            "description": "Error en la validación"
          }
        }
      }
    },
    "/extracurricular/listarExtracurricularId/{id}": {
      "get": {
        "summary": "Consultar una actividad extracurricular por ID",
        "tags": [
          "Extracurriculares"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID de la actividad extracurricular"
          }
        ],
        "responses": {
          "200": {
            "description": "Información de la actividad extracurricular"
          },
          "404": {
            "description": "Actividad no encontrada"
          }
        }
      }
    },
    "/extracurricular/actualizarExtracurricular/{id}": {
      "put": {
        "summary": "Actualizar una actividad extracurricular",
        "tags": [
          "Extracurriculares"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID de la actividad extracurricular"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "activity",
                  "startDate",
                  "finalDate",
                  "idTeacher",
                  "information",
                  "schedule",
                  "price"
                ],
                "properties": {
                  "activity": {
                    "type": "string",
                    "description": "Nombre de la actividad"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de inicio de la actividad"
                  },
                  "finalDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de finalización de la actividad"
                  },
                  "idTeacher": {
                    "type": "integer",
                    "description": "ID del profesor encargado"
                  },
                  "information": {
                    "type": "string",
                    "description": "Información adicional"
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Horario de la actividad"
                  },
                  "imagen": {
                    "type": "string",
                    "description": "URL de la imagen de la actividad (opcional)"
                  },
                  "price": {
                    "type": "number",
                    "description": "Precio de la actividad"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Actividad actualizada exitosamente"
          },
          "400": {
            "description": "Error en la validación"
          }
        }
      }
    },
    "/extracurricular/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilitar una actividad extracurricular",
        "tags": [
          "Extracurriculares"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID de la actividad extracurricular"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "isActive"
                ],
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de la actividad (true para activo, false para inactivo)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Actividad deshabilitada exitosamente"
          },
          "400": {
            "description": "Error en la validación"
          }
        }
      }
    },
    "/extracurricular/desvincularse/{id}": {
      "put": {
        "summary": "Desvincular a un estudiante de una actividad extracurricular",
        "tags": [
          "Extracurriculares"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID de la actividad extracurricular"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "idEstudiante",
                  "idExtracurricular"
                ],
                "properties": {
                  "idEstudiante": {
                    "type": "integer",
                    "description": "ID del estudiante que se va a desvincular"
                  },
                  "idExtracurricular": {
                    "type": "integer",
                    "description": "ID de la actividad extracurricular de la que se desvinculará el estudiante"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estudiante desvinculado exitosamente de la actividad extracurricular"
          },
          "400": {
            "description": "Error en la validación de los datos proporcionados"
          },
          "404": {
            "description": "Actividad extracurricular o estudiante no encontrados"
          }
        }
      }
    },
    "/grades/listarGrades": {
      "get": {
        "summary": "Listar todas las calificaciones",
        "tags": [
          "Grades"
        ],
        "responses": {
          "200": {
            "description": "Lista de calificaciones obtenida exitosamente"
          },
          "500": {
            "description": "Error en el servidor al obtener la lista de calificaciones"
          }
        }
      }
    },
    "/grades/CrearGrades": {
      "post": {
        "summary": "Crear una nueva calificación",
        "tags": [
          "Grades"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "description",
                  "isActive"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Descripción de la calificación"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de la calificación (activo/inactivo)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Calificación creada exitosamente"
          },
          "400": {
            "description": "Error en la validación de los datos proporcionados"
          },
          "500": {
            "description": "Error en el servidor al crear la calificación"
          }
        }
      }
    },
    "/hermanos/listarHermano": {
      "get": {
        "summary": "Listar todos los hermanos",
        "tags": [
          "Hermanos"
        ],
        "responses": {
          "200": {
            "description": "Lista de hermanos obtenida exitosamente"
          },
          "500": {
            "description": "Error en el servidor al obtener la lista de hermanos"
          }
        }
      }
    },
    "/hermanos/crearHermano": {
      "post": {
        "summary": "Crear un nuevo hermano",
        "tags": [
          "Hermanos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "nombres",
                  "apellidos",
                  "nivelEstudio",
                  "institucion",
                  "idEstudiante"
                ],
                "properties": {
                  "nombres": {
                    "type": "string",
                    "description": "Nombres del hermano"
                  },
                  "apellidos": {
                    "type": "string",
                    "description": "Apellidos del hermano"
                  },
                  "nivelEstudio": {
                    "type": "string",
                    "description": "Nivel de estudio del hermano"
                  },
                  "institucion": {
                    "type": "string",
                    "description": "Institución a la que asiste el hermano"
                  },
                  "idEstudiante": {
                    "type": "integer",
                    "description": "ID del estudiante asociado al hermano"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Hermano creado exitosamente"
          },
          "400": {
            "description": "Error en la validación de los datos proporcionados"
          },
          "500": {
            "description": "Error en el servidor al crear el hermano"
          }
        }
      }
    },
    "/hermanos/listarHermanoId/{id}": {
      "get": {
        "summary": "Obtener un hermano por ID",
        "tags": [
          "Hermanos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID del hermano"
          }
        ],
        "responses": {
          "200": {
            "description": "Hermano obtenido exitosamente"
          },
          "404": {
            "description": "Hermano no encontrado"
          },
          "500": {
            "description": "Error en el servidor al obtener el hermano"
          }
        }
      }
    },
    "/hermanos/actualizarHermano/{id}": {
      "put": {
        "summary": "Actualizar información de un hermano",
        "tags": [
          "Hermanos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID del hermano a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "nombres",
                  "apellidos",
                  "nivelEstudio",
                  "institucion"
                ],
                "properties": {
                  "nombres": {
                    "type": "string",
                    "description": "Nombres del hermano"
                  },
                  "apellidos": {
                    "type": "string",
                    "description": "Apellidos del hermano"
                  },
                  "nivelEstudio": {
                    "type": "string",
                    "description": "Nivel de estudio del hermano"
                  },
                  "institucion": {
                    "type": "string",
                    "description": "Institución a la que asiste el hermano"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hermano actualizado exitosamente"
          },
          "400": {
            "description": "Error en la validación de los datos proporcionados"
          },
          "404": {
            "description": "Hermano no encontrado"
          },
          "500": {
            "description": "Error en el servidor al actualizar el hermano"
          }
        }
      }
    },
    "/hermanos/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilitar un hermano",
        "tags": [
          "Hermanos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID del hermano a deshabilitar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "isActive"
                ],
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de activación del hermano (activo/inactivo)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hermano deshabilitado exitosamente"
          },
          "400": {
            "description": "Error en la validación de los datos proporcionados"
          },
          "404": {
            "description": "Hermano no encontrado"
          },
          "500": {
            "description": "Error en el servidor al deshabilitar el hermano"
          }
        }
      }
    },
    "/historialAcademico/listarhistorialAcademico": {
      "get": {
        "summary": "Lista todo el historial académico.",
        "tags": [
          "Historial Académico"
        ],
        "responses": {
          "200": {
            "description": "Lista de historial académico.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistorialAcademico"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/historialAcademico/crearhistorialAcademico": {
      "post": {
        "summary": "Crear un nuevo historial académico",
        "tags": [
          "Historial Académico"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "presscolar": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Datos del nivel preescolar"
                  },
                  "primaria": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Datos del nivel primaria"
                  },
                  "bachillerato": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Datos del nivel bachillerato"
                  },
                  "anioAnterior": {
                    "type": "string",
                    "description": "Año anterior cursado"
                  },
                  "motivoRetiro": {
                    "type": "string",
                    "description": "Motivo de retiro en caso de haberlo"
                  },
                  "repeticionAnio": {
                    "type": "string",
                    "description": "Información sobre la repetición de un año académico"
                  },
                  "distincionAcademica": {
                    "type": "string",
                    "description": "Información sobre distinciones académicas obtenidas"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante al que pertenece el historial"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Historial académico creado con éxito"
          },
          "400": {
            "description": "Error en los datos enviados"
          }
        }
      }
    },
    "/historialAcademico/listarhistorialAcademicoId/{id}": {
      "get": {
        "summary": "Obtiene un historial académico por ID.",
        "tags": [
          "Historial Académico"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del historial académico.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Datos del historial académico.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistorialAcademico"
                }
              }
            }
          },
          "404": {
            "description": "Historial académico no encontrado."
          }
        }
      }
    },
    "/crearhistorialAcademico": {
      "post": {
        "summary": "Crear un nuevo historial académico",
        "tags": [
          "Historial Académico"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "preescolar": {
                    "type": "string",
                    "description": "Información del nivel preescolar"
                  },
                  "gradoCursadoPreescolar": {
                    "type": "string",
                    "description": "Grado cursado en el nivel preescolar"
                  },
                  "gradoCursadoJardin": {
                    "type": "string",
                    "description": "Grado cursado en el jardín"
                  },
                  "gradoCursadoTransicion": {
                    "type": "string",
                    "description": "Grado cursado en la transición"
                  },
                  "primaria": {
                    "type": "string",
                    "description": "Información del nivel primaria"
                  },
                  "gradoCursadoPrimaria1": {
                    "type": "string",
                    "description": "Grado cursado en primaria 1"
                  },
                  "gradoCursadoPrimaria2": {
                    "type": "string",
                    "description": "Grado cursado en primaria 2"
                  },
                  "gradoCursadoPrimaria3": {
                    "type": "string",
                    "description": "Grado cursado en primaria 3"
                  },
                  "gradoCursadoPrimaria4": {
                    "type": "string",
                    "description": "Grado cursado en primaria 4"
                  },
                  "gradoCursadoPrimaria5": {
                    "type": "string",
                    "description": "Grado cursado en primaria 5"
                  },
                  "bachillerato": {
                    "type": "string",
                    "description": "Información del nivel bachillerato"
                  },
                  "gradoCursadoBachillerato6": {
                    "type": "string",
                    "description": "Grado cursado en bachillerato 6"
                  },
                  "gradoCursadoBachillerato7": {
                    "type": "string",
                    "description": "Grado cursado en bachillerato 7"
                  },
                  "gradoCursadoBachillerato8": {
                    "type": "string",
                    "description": "Grado cursado en bachillerato 8"
                  },
                  "anioAnterior": {
                    "type": "string",
                    "description": "Año anterior cursado"
                  },
                  "motivoRetiro": {
                    "type": "string",
                    "description": "Motivo de retiro en caso de haberlo"
                  },
                  "repeticionAnio": {
                    "type": "string",
                    "description": "Información sobre la repetición de un año académico"
                  },
                  "distincionAcademica": {
                    "type": "string",
                    "description": "Información sobre distinciones académicas obtenidas"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante al que pertenece el historial"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Historial académico creado con éxito"
          },
          "400": {
            "description": "Error en los datos enviados"
          }
        }
      }
    },
    "/historialAcademico/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilita un historial académico por ID.",
        "tags": [
          "Historial Académico"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del historial académico.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de activación del historial académico."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Historial académico deshabilitado."
          },
          "400": {
            "description": "Error en los datos enviados."
          }
        }
      }
    },
    "/historicoCartera/listarHistoricoCartera/{id}": {
      "get": {
        "summary": "Listar el histórico de cartera por ID",
        "tags": [
          "HistoricoCartera"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID del estudiante para el cual se listará el histórico de cartera"
          }
        ],
        "responses": {
          "200": {
            "description": "Histórico de cartera obtenido exitosamente"
          },
          "404": {
            "description": "Histórico de cartera no encontrado"
          },
          "500": {
            "description": "Error en el servidor al obtener el histórico de cartera"
          }
        }
      }
    },
    "/historicoCartera/totalDeuda/{id}": {
      "get": {
        "summary": "Obtener el total de la deuda de un estudiante por ID",
        "tags": [
          "HistoricoCartera"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID del estudiante para el cual se calculará el total de la deuda"
          }
        ],
        "responses": {
          "200": {
            "description": "Total de la deuda obtenido exitosamente"
          },
          "404": {
            "description": "Deuda no encontrada para el estudiante especificado"
          },
          "500": {
            "description": "Error en el servidor al calcular el total de la deuda"
          }
        }
      }
    },
    "/historicoCartera/totalDeudas": {
      "get": {
        "summary": "Obtener el total de todas las deudas",
        "tags": [
          "HistoricoCartera"
        ],
        "responses": {
          "200": {
            "description": "Total de todas las deudas obtenido exitosamente"
          },
          "500": {
            "description": "Error en el servidor al calcular el total de las deudas"
          }
        }
      }
    },
    "/historicoCartera/totalDeudasAcudiente/{id}": {
      "get": {
        "summary": "Obtener el total de las deudas de un acudiente por ID",
        "tags": [
          "HistoricoCartera"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID del acudiente para el cual se calculará el total de las deudas"
          }
        ],
        "responses": {
          "200": {
            "description": "Total de las deudas del acudiente obtenido exitosamente"
          },
          "404": {
            "description": "Deudas no encontradas para el acudiente especificado"
          },
          "500": {
            "description": "Error en el servidor al calcular el total de las deudas del acudiente"
          }
        }
      }
    },
    "/historicoCartera/listarHistoricoCarteraSearch/{dato}/{id}": {
      "get": {
        "summary": "Buscar en el histórico de cartera por un dato específico",
        "tags": [
          "HistoricoCartera"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dato",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Dato a buscar en el histórico de cartera"
          },
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID del estudiante para el cual se realizará la búsqueda"
          }
        ],
        "responses": {
          "200": {
            "description": "Resultados de la búsqueda en el histórico de cartera obtenidos exitosamente"
          },
          "404": {
            "description": "No se encontraron resultados en el histórico de cartera para el dato especificado"
          },
          "500": {
            "description": "Error en el servidor al realizar la búsqueda en el histórico de cartera"
          }
        }
      }
    },
    "/inscription/listarInscription": {
      "get": {
        "summary": "Listar todas las inscripciones",
        "tags": [
          "Inscription"
        ],
        "responses": {
          "200": {
            "description": "Lista de inscripciones obtenida exitosamente"
          },
          "500": {
            "description": "Error en el servidor al obtener las inscripciones"
          }
        }
      }
    },
    "/inscription/listarInscription/{id}": {
      "get": {
        "summary": "Obtener una inscripción por ID",
        "tags": [
          "Inscription"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID de la inscripción a obtener"
          }
        ],
        "responses": {
          "200": {
            "description": "Inscripción obtenida exitosamente"
          },
          "404": {
            "description": "Inscripción no encontrada"
          },
          "500": {
            "description": "Error en el servidor al obtener la inscripción"
          }
        }
      }
    },
    "/inscription/crearInscription": {
      "post": {
        "summary": "Crear una nueva inscripción",
        "tags": [
          "Inscription"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "description": "Precio de la inscripción"
                  },
                  "description": {
                    "type": "string",
                    "description": "Descripción de la inscripción"
                  },
                  "idUser": {
                    "type": "integer",
                    "description": "ID del usuario asociado"
                  },
                  "idPeriod": {
                    "type": "integer",
                    "description": "ID del período asociado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inscripción creada exitosamente"
          },
          "400": {
            "description": "Error en la solicitud al crear la inscripción"
          },
          "500": {
            "description": "Error en el servidor al crear la inscripción"
          }
        }
      }
    },
    "/inscription/actualizarInscription/{id}": {
      "put": {
        "summary": "Actualizar una inscripción por ID",
        "tags": [
          "Inscription"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "ID de la inscripción a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "description": "Precio de la inscripción"
                  },
                  "description": {
                    "type": "string",
                    "description": "Descripción de la inscripción"
                  },
                  "idUser": {
                    "type": "integer",
                    "description": "ID del usuario asociado"
                  },
                  "idPeriod": {
                    "type": "integer",
                    "description": "ID del período asociado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inscripción actualizada exitosamente"
          },
          "400": {
            "description": "Error en la solicitud al actualizar la inscripción"
          },
          "404": {
            "description": "Inscripción no encontrada"
          },
          "500": {
            "description": "Error en el servidor al actualizar la inscripción"
          }
        }
      }
    },
    "/actualizarValorInscription": {
      "post": {
        "summary": "Actualizar el valor de una inscripción",
        "tags": [
          "Inscription"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "description": "Nuevo precio de la inscripción"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Valor de la inscripción actualizado exitosamente"
          },
          "400": {
            "description": "Error en la solicitud al actualizar el valor de la inscripción"
          },
          "500": {
            "description": "Error en el servidor al actualizar el valor de la inscripción"
          }
        }
      }
    },
    "/leveling/listarLevelings": {
      "get": {
        "summary": "Lista todos los cursos de nivelación.",
        "tags": [
          "Leveling"
        ],
        "responses": {
          "200": {
            "description": "Lista de cursos de nivelación."
          }
        }
      }
    },
    "/leveling/listarLeveling/{codigo}": {
      "get": {
        "summary": "Obtiene un curso de nivelación por código.",
        "tags": [
          "Leveling"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "codigo",
            "required": true,
            "description": "Código del curso de nivelación.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Datos del curso de nivelación."
          },
          "404": {
            "description": "Curso de nivelación no encontrado."
          }
        }
      }
    },
    "/leveling/listarEstudiante/{codigo}": {
      "get": {
        "summary": "Lista datos del estudiante por código.",
        "tags": [
          "Leveling"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "codigo",
            "required": true,
            "description": "Código del estudiante.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Datos del estudiante.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/leveling/listarLevelingId/{id}": {
      "get": {
        "summary": "Obtiene un curso de nivelación por ID.",
        "tags": [
          "Leveling"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del curso de nivelación.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Datos del curso de nivelación."
          },
          "404": {
            "description": "Curso de nivelación no encontrado."
          }
        }
      }
    },
    "/leveling/crearLeveling": {
      "post": {
        "summary": "Crear un nuevo proceso de nivelación",
        "tags": [
          "Leveling"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modalidadCurso": {
                    "type": "string",
                    "description": "Modalidad del curso de nivelación"
                  },
                  "asignatura": {
                    "type": "string",
                    "description": "Asignatura en la que se realizará la nivelación"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado activo del proceso de nivelación (true o false)"
                  },
                  "estadoAprobado": {
                    "type": "string",
                    "description": "Estado de aprobación del proceso"
                  },
                  "grado": {
                    "type": "string",
                    "description": "Grado del estudiante"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante que realiza la nivelación"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Nivelación creada con éxito"
          },
          "400": {
            "description": "Error en los datos enviados"
          }
        }
      }
    },
    "/leveling/actualizarLeveling/{id}": {
      "put": {
        "summary": "Actualizar un proceso de nivelación existente",
        "tags": [
          "Leveling"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID del proceso de nivelación a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modalidadCurso": {
                    "type": "string",
                    "description": "Modalidad del curso de nivelación"
                  },
                  "asignaturaisActive": {
                    "type": "boolean",
                    "description": "Estado activo de la asignatura en el proceso de nivelación"
                  },
                  "estadoAprobado": {
                    "type": "string",
                    "description": "Estado de aprobación del proceso"
                  },
                  "grado": {
                    "type": "string",
                    "description": "Grado del estudiante"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante que realiza la nivelación"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Nivelación actualizada con éxito"
          },
          "400": {
            "description": "Error en los datos enviados"
          }
        }
      }
    },
    "/leveling/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilita un curso de nivelación por ID.",
        "tags": [
          "Leveling"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del curso de nivelación.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de activación del curso de nivelación."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Curso de nivelación deshabilitado."
          },
          "400": {
            "description": "Error en los datos enviados."
          }
        }
      }
    },
    "/leveling/cambiarEstado/{id}": {
      "put": {
        "summary": "Cambia el estado de aprobación de un curso de nivelación por ID.",
        "tags": [
          "Leveling"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del curso de nivelación.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "estadoAprobado": {
                    "type": "string",
                    "description": "Estado de aprobación del curso de nivelación."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estado del curso de nivelación cambiado."
          },
          "400": {
            "description": "Error en los datos enviados."
          }
        }
      }
    },
    "/padres-familia/listarPadreFamilia": {
      "get": {
        "summary": "Lista todos los padres de familia.",
        "tags": [
          "PadreFamilia"
        ],
        "responses": {
          "200": {
            "description": "Lista de padres de familia.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PadreFamilia"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/padres-familia/crearAcudiente": {
      "post": {
        "summary": "Crea un nuevo acudiente.",
        "tags": [
          "PadreFamilia"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentesco": {
                    "type": "string",
                    "description": "Parentesco del acudiente con el estudiante."
                  },
                  "estado": {
                    "type": "string",
                    "description": "Estado del acudiente."
                  },
                  "tipoDocumento": {
                    "type": "string",
                    "description": "Tipo de documento del acudiente."
                  },
                  "identificacion": {
                    "type": "string",
                    "description": "Identificación del acudiente."
                  },
                  "nombres": {
                    "type": "string",
                    "description": "Nombres del acudiente."
                  },
                  "apellidos": {
                    "type": "string",
                    "description": "Apellidos del acudiente."
                  },
                  "profesion": {
                    "type": "string",
                    "description": "Profesión del acudiente."
                  },
                  "dondeTrabaja": {
                    "type": "string",
                    "description": "Lugar de trabajo del acudiente."
                  },
                  "cargo": {
                    "type": "string",
                    "description": "Cargo del acudiente en su trabajo."
                  },
                  "ingresoMensual": {
                    "type": "number",
                    "description": "Ingreso mensual del acudiente."
                  },
                  "correoElectronico": {
                    "type": "string",
                    "description": "Correo electrónico del acudiente."
                  },
                  "direccion": {
                    "type": "string",
                    "description": "Dirección del acudiente."
                  },
                  "telefono": {
                    "type": "string",
                    "description": "Teléfono del acudiente."
                  },
                  "celular": {
                    "type": "string",
                    "description": "Celular del acudiente."
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante asociado."
                  }
                },
                "required": [
                  "parentesco",
                  "estado",
                  "tipoDocumento",
                  "identificacion",
                  "nombres",
                  "apellidos",
                  "profesion",
                  "dondeTrabaja",
                  "cargo",
                  "ingresoMensual",
                  "correoElectronico",
                  "direccion",
                  "telefono",
                  "celular",
                  "idEstudiante"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Acudiente creado exitosamente."
          },
          "400": {
            "description": "Error en los datos enviados."
          }
        }
      }
    },
    "/padres-familia/crearResponsable": {
      "post": {
        "summary": "Crea un nuevo responsable para un estudiante.",
        "tags": [
          "PadreFamilia"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tipoPersona": {
                    "type": "string",
                    "description": "Tipo de persona (natural o jurídica)."
                  },
                  "razonSocial": {
                    "type": "string",
                    "description": "Razón social del responsable."
                  },
                  "tipoDocumento": {
                    "type": "string",
                    "description": "Tipo de documento del responsable."
                  },
                  "identificacion": {
                    "type": "string",
                    "description": "Número de identificación del responsable."
                  },
                  "direccion": {
                    "type": "string",
                    "description": "Dirección del responsable."
                  },
                  "pais": {
                    "type": "string",
                    "description": "País de residencia del responsable."
                  },
                  "departamento": {
                    "type": "string",
                    "description": "Departamento o estado de residencia del responsable."
                  },
                  "ciudad": {
                    "type": "string",
                    "description": "Ciudad de residencia del responsable."
                  },
                  "correoElectronico": {
                    "type": "string",
                    "description": "Correo electrónico del responsable."
                  },
                  "celular": {
                    "type": "string",
                    "description": "Número de celular del responsable."
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante asociado al responsable."
                  },
                  "responsable": {
                    "type": "string",
                    "description": "Rol del responsable."
                  }
                },
                "required": [
                  "tipoPersona",
                  "razonSocial",
                  "tipoDocumento",
                  "identificacion",
                  "direccion",
                  "pais",
                  "departamento",
                  "ciudad",
                  "correoElectronico",
                  "celular",
                  "idEstudiante",
                  "responsable"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Responsable creado exitosamente."
          },
          "400": {
            "description": "Error en los datos enviados."
          }
        }
      }
    },
    "/padres-familia/listarPadreFamiliaId/{id}": {
      "get": {
        "summary": "Obtiene información de un padre de familia por ID.",
        "tags": [
          "PadreFamilia"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del padre de familia."
          }
        ],
        "responses": {
          "200": {
            "description": "Información del padre de familia obtenida exitosamente."
          },
          "404": {
            "description": "Padre de familia no encontrado."
          }
        }
      }
    },
    "/padres-familia/getAllAcudiente/{id}": {
      "get": {
        "summary": "Obtiene todos los acudientes asociados a un estudiante por ID.",
        "tags": [
          "PadreFamilia"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del estudiante."
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de acudientes obtenida exitosamente."
          },
          "404": {
            "description": "Estudiante no encontrado o no tiene acudientes."
          }
        }
      }
    },
    "/padres-familia/actualizarPadreFamilia/{id}": {
      "put": {
        "summary": "Actualiza la información de un padre de familia por ID.",
        "tags": [
          "PadreFamilia"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del padre de familia."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "estado": {
                    "type": "string",
                    "description": "Estado del padre de familia."
                  },
                  "vive": {
                    "type": "string",
                    "description": "Indica si el padre de familia vive con el estudiante."
                  },
                  "tipoDocumento": {
                    "type": "string",
                    "description": "Tipo de documento de identidad."
                  },
                  "identificacion": {
                    "type": "string",
                    "description": "Número de identificación."
                  },
                  "nombres": {
                    "type": "string",
                    "description": "Nombres del padre de familia."
                  },
                  "apellidos": {
                    "type": "string",
                    "description": "Apellidos del padre de familia."
                  },
                  "profesion": {
                    "type": "string",
                    "description": "Profesión del padre de familia."
                  },
                  "dondeTrabaja": {
                    "type": "string",
                    "description": "Lugar de trabajo del padre de familia."
                  },
                  "cargo": {
                    "type": "string",
                    "description": "Cargo del padre de familia."
                  },
                  "ingresoMensual": {
                    "type": "string",
                    "description": "Ingreso mensual del padre de familia."
                  },
                  "correoElectronico": {
                    "type": "string",
                    "description": "Correo electrónico del padre de familia."
                  },
                  "direccion": {
                    "type": "string",
                    "description": "Dirección del padre de familia."
                  },
                  "telefono": {
                    "type": "string",
                    "description": "Número de teléfono del padre de familia."
                  },
                  "celular": {
                    "type": "string",
                    "description": "Número de celular del padre de familia."
                  }
                },
                "required": [
                  "estado",
                  "vive",
                  "tipoDocumento",
                  "identificacion",
                  "nombres",
                  "apellidos",
                  "profesion",
                  "dondeTrabaja",
                  "cargo",
                  "ingresoMensual",
                  "correoElectronico",
                  "direccion",
                  "telefono",
                  "celular"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Información del padre de familia actualizada exitosamente."
          },
          "400": {
            "description": "Error en los datos enviados."
          },
          "404": {
            "description": "Padre de familia no encontrado."
          }
        }
      }
    },
    "/padres-familia/actualizarAcudiente/{id}": {
      "put": {
        "summary": "Actualiza la información de un acudiente por ID.",
        "tags": [
          "PadreFamilia"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del acudiente."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acudiente": {
                    "type": "string",
                    "description": "Nombre del acudiente."
                  },
                  "estudiante": {
                    "type": "string",
                    "description": "ID del estudiante asociado."
                  },
                  "madre": {
                    "type": "string",
                    "description": "Nombre de la madre."
                  },
                  "padre": {
                    "type": "string",
                    "description": "Nombre del padre."
                  },
                  "responsable": {
                    "type": "string",
                    "description": "Nombre del responsable."
                  }
                },
                "required": [
                  "acudiente",
                  "estudiante",
                  "madre",
                  "padre",
                  "responsable"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Información del acudiente actualizada exitosamente."
          },
          "400": {
            "description": "Error en los datos enviados."
          },
          "404": {
            "description": "Acudiente no encontrado."
          }
        }
      }
    },
    "/padres-familia/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilita un registro por ID.",
        "tags": [
          "PadreFamilia"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del registro a deshabilitar."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de activación del registro."
                  }
                },
                "required": [
                  "isActive"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registro deshabilitado exitosamente."
          },
          "400": {
            "description": "Error en los datos enviados."
          },
          "404": {
            "description": "Registro no encontrado."
          }
        }
      }
    },
    "/pagoMatricula/CrearPago": {
      "post": {
        "summary": "Crea un nuevo pago.",
        "tags": [
          "PagoMatricula"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "monto": {
                    "type": "number",
                    "description": "Monto del pago."
                  },
                  "metodoPago": {
                    "type": "string",
                    "description": "Método de pago utilizado."
                  },
                  "jornada": {
                    "type": "string",
                    "description": "Jornada en la que se realiza el pago."
                  },
                  "idAcudiente": {
                    "type": "string",
                    "description": "ID del acudiente que realiza el pago."
                  },
                  "valMes": {
                    "type": "number",
                    "description": "Valor mensual del pago."
                  },
                  "meses": {
                    "type": "integer",
                    "description": "Número de meses que abarca el pago."
                  },
                  "idPension": {
                    "type": "string",
                    "description": "ID de la pensión asociada al pago."
                  }
                },
                "required": [
                  "monto",
                  "metodoPago",
                  "jornada",
                  "idAcudiente",
                  "valMes",
                  "meses",
                  "idPension"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pago creado exitosamente."
          },
          "400": {
            "description": "Error en los datos enviados."
          }
        }
      }
    },
    "/pagoMatricula/GetPago": {
      "post": {
        "summary": "Obtiene el pago de un acudiente.",
        "tags": [
          "PagoMatricula"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idAcudiente": {
                    "type": "string",
                    "description": "ID del acudiente para obtener el pago."
                  }
                },
                "required": [
                  "idAcudiente"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Información del pago obtenida exitosamente."
          },
          "400": {
            "description": "Error en los datos enviados."
          },
          "404": {
            "description": "Pago no encontrado para el acudiente proporcionado."
          }
        }
      }
    },
    "/pagosPresenciales/list": {
      "get": {
        "summary": "Obtiene la lista de pagos presenciales.",
        "tags": [
          "Pension"
        ],
        "responses": {
          "200": {
            "description": "Lista de pagos presenciales obtenida exitosamente."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/pagosPresenciales/pagar": {
      "post": {
        "summary": "Crea un nuevo pago presencial.",
        "tags": [
          "Pension"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentCode": {
                    "type": "string",
                    "description": "Código de pago."
                  },
                  "servicio": {
                    "type": "string",
                    "description": "Servicio asociado al pago."
                  },
                  "observacion": {
                    "type": "string",
                    "description": "Observación del pago."
                  },
                  "estado": {
                    "type": "string",
                    "description": "Estado del pago."
                  },
                  "monto": {
                    "type": "number",
                    "description": "Monto del pago."
                  }
                },
                "required": [
                  "paymentCode",
                  "servicio",
                  "observacion",
                  "estado",
                  "monto"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pago presencial creado exitosamente."
          },
          "400": {
            "description": "Error en los datos enviados."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/pagosPresenciales/{id}": {
      "put": {
        "summary": "Actualiza un pago presencial existente.",
        "tags": [
          "Pension"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del pago presencial a actualizar.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentCode": {
                    "type": "string",
                    "description": "Código de pago."
                  },
                  "servicio": {
                    "type": "string",
                    "description": "Servicio asociado al pago."
                  },
                  "observacion": {
                    "type": "string",
                    "description": "Observación del pago."
                  },
                  "estado": {
                    "type": "string",
                    "description": "Estado del pago."
                  }
                },
                "required": [
                  "paymentCode",
                  "servicio",
                  "observacion",
                  "estado"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pago presencial actualizado exitosamente."
          },
          "400": {
            "description": "Error en los datos enviados."
          },
          "404": {
            "description": "Pago presencial no encontrado."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/pagosPresenciales/status/{id}": {
      "put": {
        "summary": "Actualiza el estado de un pago presencial.",
        "tags": [
          "Pension"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del pago presencial a actualizar.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "estado": {
                    "type": "string",
                    "description": "Nuevo estado del pago."
                  }
                },
                "required": [
                  "estado"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estado del pago presencial actualizado exitosamente."
          },
          "400": {
            "description": "Error en los datos enviados."
          },
          "404": {
            "description": "Pago presencial no encontrado."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/pension/listarPensiones": {
      "get": {
        "summary": "Listar todas las pensiones",
        "tags": [
          "Pensiones"
        ],
        "responses": {
          "200": {
            "description": "Lista de pensiones obtenida exitosamente"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/pension/listarPension/{idGrade}": {
      "get": {
        "summary": "Obtener pensión por ID de grado",
        "tags": [
          "Pensiones"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idGrade",
            "required": true,
            "description": "ID del grado",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pensión obtenida exitosamente"
          },
          "404": {
            "description": "Pensión no encontrada"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/pension/listarPensionId/{id}": {
      "get": {
        "summary": "Obtener pensión por ID",
        "tags": [
          "Pensiones"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID de la pensión",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pensión obtenida exitosamente"
          },
          "404": {
            "description": "Pensión no encontrada"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/pension/crearPension": {
      "post": {
        "summary": "Crear una nueva pensión",
        "tags": [
          "Pensiones"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "description": "Monto de la pensión"
                  },
                  "discount": {
                    "type": "number",
                    "description": "Descuento aplicado"
                  },
                  "use": {
                    "type": "string",
                    "description": "Uso de la pensión"
                  },
                  "idGrade": {
                    "type": "string",
                    "description": "ID del grado"
                  },
                  "interes": {
                    "type": "number",
                    "description": "Interés aplicado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pensión creada exitosamente"
          },
          "400": {
            "description": "Datos inválidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/pension/actualizarPension/{id}": {
      "put": {
        "summary": "Actualizar una pensión existente",
        "tags": [
          "Pensiones"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID de la pensión",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "description": "Monto de la pensión"
                  },
                  "discount": {
                    "type": "number",
                    "description": "Descuento aplicado"
                  },
                  "idGrade": {
                    "type": "string",
                    "description": "ID del grado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pensión actualizada exitosamente"
          },
          "400": {
            "description": "Datos inválidos"
          },
          "404": {
            "description": "Pensión no encontrada"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/pension/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilitar una pensión",
        "tags": [
          "Pensiones"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID de la pensión",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de la pensión (true para activo, false para inactivo)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pensión deshabilitada exitosamente"
          },
          "400": {
            "description": "Datos inválidos"
          },
          "404": {
            "description": "Pensión no encontrada"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/pago-pension/list": {
      "post": {
        "summary": "Consulta las pensiones asociadas a un acudiente",
        "tags": [
          "Pension Pago"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idAcudiente": {
                    "type": "string",
                    "description": "ID del acudiente para consultar las pensiones"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lista de pensiones asociadas al acudiente obtenida exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/pago-pension/pagar/{tipo}": {
      "post": {
        "summary": "Realiza el pago de pensiones",
        "tags": [
          "Pension Pago"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tipo",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Tipo de pensión a pagar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pensiones": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idPension": {
                          "type": "string",
                          "description": "ID de la pensión"
                        },
                        "amount": {
                          "type": "number",
                          "format": "float",
                          "description": "Monto a pagar"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pago de pensiones realizado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos o error en el pago"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/period/listarPeriodos": {
      "get": {
        "summary": "Obtiene la lista de todos los períodos",
        "tags": [
          "Period"
        ],
        "responses": {
          "200": {
            "description": "Lista de períodos obtenida exitosamente"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/period/listarPeriodo/{id}": {
      "get": {
        "summary": "Obtiene un período por ID",
        "tags": [
          "Period"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del período a obtener"
          }
        ],
        "responses": {
          "200": {
            "description": "Período obtenido exitosamente"
          },
          "404": {
            "description": "Período no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/period/CrearPeriodo": {
      "post": {
        "summary": "Crea un nuevo período",
        "tags": [
          "Period"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "age": {
                    "type": "string",
                    "description": "Edad asociada al período"
                  },
                  "password": {
                    "type": "string",
                    "description": "Contraseña del período"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Identificador del período"
                  },
                  "consecutive": {
                    "type": "string",
                    "description": "Consecutivo del período"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Período creado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/period/actualizarPeriodo/{id}": {
      "put": {
        "summary": "Actualiza un período existente",
        "tags": [
          "Period"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del período a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "age": {
                    "type": "string",
                    "description": "Edad asociada al período"
                  },
                  "password": {
                    "type": "string",
                    "description": "Contraseña del período"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Identificador del período"
                  },
                  "consecutive": {
                    "type": "string",
                    "description": "Consecutivo del período"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Período actualizado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "404": {
            "description": "Período no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/role/listarRoles": {
      "get": {
        "summary": "Obtiene la lista de todos los roles",
        "tags": [
          "Role"
        ],
        "responses": {
          "200": {
            "description": "Lista de roles obtenida exitosamente"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/role/CrearRole": {
      "post": {
        "summary": "Crea un nuevo rol",
        "tags": [
          "Role"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Nombre del rol"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rol creado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/role/actualizarRole/{id}": {
      "put": {
        "summary": "Actualiza un rol existente",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del rol a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Nombre del rol"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rol actualizado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "404": {
            "description": "Rol no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/role/eliminarRole/{id}": {
      "delete": {
        "summary": "Elimina un rol",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del rol a eliminar"
          }
        ],
        "responses": {
          "200": {
            "description": "Rol eliminado exitosamente"
          },
          "404": {
            "description": "Rol no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/schoolYear/listarSchoolYears": {
      "get": {
        "summary": "Lista todos los años escolares",
        "tags": [
          "SchoolYear"
        ],
        "responses": {
          "200": {
            "description": "Lista de todos los años escolares"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/schoolYear/listarSchoolYear/{code}": {
      "get": {
        "summary": "Obtiene un año escolar específico por código",
        "tags": [
          "SchoolYear"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Código del año escolar a consultar"
          }
        ],
        "responses": {
          "200": {
            "description": "Año escolar específico"
          },
          "404": {
            "description": "Año escolar no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/schoolYear/listarSchoolYearId/{id}": {
      "get": {
        "summary": "Obtiene un año escolar específico por ID",
        "tags": [
          "SchoolYear"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del año escolar a consultar"
          }
        ],
        "responses": {
          "200": {
            "description": "Año escolar específico"
          },
          "404": {
            "description": "Año escolar no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/schoolYear/crearSchoolYear": {
      "post": {
        "summary": "Crea un nuevo año escolar",
        "tags": [
          "SchoolYear"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Código del año escolar"
                  },
                  "age": {
                    "type": "integer",
                    "description": "Edad del año escolar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Año escolar creado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/schoolYear/actualizarSchoolYear/{id}": {
      "put": {
        "summary": "Actualiza un año escolar existente",
        "tags": [
          "SchoolYear"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del año escolar a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Código del año escolar"
                  },
                  "age": {
                    "type": "integer",
                    "description": "Edad del año escolar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Año escolar actualizado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "404": {
            "description": "Año escolar no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/schoolYear/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilita un año escolar",
        "tags": [
          "SchoolYear"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del año escolar a deshabilitar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado del año escolar (true o false)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Año escolar deshabilitado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "404": {
            "description": "Año escolar no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/schoolYear/actualizarAnioLectivo": {
      "post": {
        "summary": "Actualiza el año lectivo",
        "tags": [
          "SchoolYear"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID del año lectivo a actualizar"
                  },
                  "password": {
                    "type": "string",
                    "description": "Contraseña para la actualización"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Año lectivo actualizado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "404": {
            "description": "Año lectivo no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/soportePagos/crearSoportePago": {
      "post": {
        "summary": "Crea un nuevo soporte de pago",
        "tags": [
          "SoportePagos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentCode": {
                    "type": "string",
                    "description": "Código del pago"
                  },
                  "idAcudiente": {
                    "type": "string",
                    "description": "ID del acudiente"
                  },
                  "monto": {
                    "type": "number",
                    "description": "Monto del pago"
                  },
                  "viaPago": {
                    "type": "string",
                    "description": "Vía de pago"
                  },
                  "tipoPago": {
                    "type": "string",
                    "description": "Tipo de pago"
                  }
                },
                "required": [
                  "paymentCode",
                  "idAcudiente",
                  "monto",
                  "viaPago",
                  "tipoPago"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Soporte de pago creado exitosamente"
          },
          "400": {
            "description": "Datos inválidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/soportePagos/listarMisSoportesPagos/{idAcudiente}": {
      "get": {
        "summary": "Lista los soportes de pagos de un acudiente específico",
        "tags": [
          "SoportePagos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idAcudiente",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del acudiente para filtrar los soportes de pago"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de soportes de pago para el acudiente especificado"
          },
          "404": {
            "description": "No se encontraron soportes de pago para el acudiente especificado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/soportePagos/listarSoportesPagos": {
      "get": {
        "summary": "Lista todos los soportes de pagos",
        "tags": [
          "SoportePagos"
        ],
        "responses": {
          "200": {
            "description": "Lista de todos los soportes de pago"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/listarStudentDatabases": {
      "get": {
        "summary": "Lista todas las bases de datos de estudiantes",
        "tags": [
          "StudentDatabase"
        ],
        "responses": {
          "200": {
            "description": "Lista de bases de datos de estudiantes"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/get-pension": {
      "post": {
        "summary": "Obtiene información sobre la pensión para un estudiante",
        "tags": [
          "StudentDatabase"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "studentId": {
                    "type": "string",
                    "description": "ID del estudiante"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Información sobre la pensión del estudiante"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/get-matricula": {
      "post": {
        "summary": "Obtiene información sobre la matrícula para un estudiante",
        "tags": [
          "StudentDatabase"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "studentId": {
                    "type": "string",
                    "description": "ID del estudiante"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Información sobre la matrícula del estudiante"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/listarStudentDatabase/{nombres}/{estadoEstudiante}": {
      "get": {
        "summary": "Obtiene la base de datos de un estudiante por nombre y estado",
        "tags": [
          "StudentDatabase"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "nombres",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Nombre del estudiante"
          },
          {
            "in": "path",
            "name": "estadoEstudiante",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Estado del estudiante"
          }
        ],
        "responses": {
          "200": {
            "description": "Información del estudiante"
          },
          "404": {
            "description": "Estudiante no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/listarStudentDatabaseEstado/{estadoEstudiante}": {
      "get": {
        "summary": "Obtiene la base de datos de estudiantes por estado",
        "tags": [
          "StudentDatabase"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "estadoEstudiante",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Estado del estudiante"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de estudiantes en el estado proporcionado"
          },
          "404": {
            "description": "No se encontraron estudiantes con el estado proporcionado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/listarStudentDatabaseId/{id}": {
      "get": {
        "summary": "Obtiene la base de datos de un estudiante por ID",
        "tags": [
          "StudentDatabase"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del estudiante"
          }
        ],
        "responses": {
          "200": {
            "description": "Información del estudiante"
          },
          "404": {
            "description": "Estudiante no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/crearStudentDatabase": {
      "post": {
        "summary": "Crea una nueva base de datos de estudiante",
        "tags": [
          "StudentDatabase"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "codigo": {
                    "type": "string",
                    "description": "Código del estudiante"
                  },
                  "nombres": {
                    "type": "string",
                    "description": "Nombres del estudiante"
                  },
                  "apellidos": {
                    "type": "string",
                    "description": "Apellidos del estudiante"
                  },
                  "tipoDocumento": {
                    "type": "string",
                    "description": "Tipo de documento"
                  },
                  "expedicion": {
                    "type": "string",
                    "description": "Lugar de expedición del documento"
                  },
                  "lugarNacimiento": {
                    "type": "string",
                    "description": "Lugar de nacimiento"
                  },
                  "fechaNacimiento": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de nacimiento"
                  },
                  "edad": {
                    "type": "integer",
                    "description": "Edad del estudiante"
                  },
                  "direccion": {
                    "type": "string",
                    "description": "Dirección del estudiante"
                  },
                  "tipoDireccion": {
                    "type": "string",
                    "description": "Tipo de dirección (urbana, rural, etc.)"
                  },
                  "barrio": {
                    "type": "string",
                    "description": "Barrio del estudiante"
                  },
                  "estrato": {
                    "type": "integer",
                    "description": "Estrato socioeconómico"
                  },
                  "telefono": {
                    "type": "string",
                    "description": "Teléfono de contacto"
                  },
                  "correo": {
                    "type": "string",
                    "format": "email",
                    "description": "Correo electrónico"
                  },
                  "tipoCupo": {
                    "type": "string",
                    "description": "Tipo de cupo (normal, subsidio, etc.)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Estudiante creado exitosamente"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/actualizarStudentDatabase/{id}": {
      "put": {
        "summary": "Actualiza los datos de un estudiante",
        "tags": [
          "StudentDatabase"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del estudiante a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "codigo": {
                    "type": "string",
                    "description": "Código del estudiante"
                  },
                  "nombres": {
                    "type": "string",
                    "description": "Nombres del estudiante"
                  },
                  "apellidos": {
                    "type": "string",
                    "description": "Apellidos del estudiante"
                  },
                  "grado": {
                    "type": "string",
                    "description": "Grado del estudiante"
                  },
                  "identificacion": {
                    "type": "string",
                    "description": "Identificación del estudiante"
                  },
                  "tipoDocumento": {
                    "type": "string",
                    "description": "Tipo de documento"
                  },
                  "expedicion": {
                    "type": "string",
                    "description": "Lugar de expedición del documento"
                  },
                  "lugarNacimiento": {
                    "type": "string",
                    "description": "Lugar de nacimiento"
                  },
                  "fechaNacimiento": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de nacimiento"
                  },
                  "edad": {
                    "type": "integer",
                    "description": "Edad del estudiante"
                  },
                  "direccion": {
                    "type": "string",
                    "description": "Dirección del estudiante"
                  },
                  "tipoDireccion": {
                    "type": "string",
                    "description": "Tipo de dirección (urbana, rural, etc.)"
                  },
                  "barrio": {
                    "type": "string",
                    "description": "Barrio del estudiante"
                  },
                  "estrato": {
                    "type": "integer",
                    "description": "Estrato socioeconómico"
                  },
                  "telefono": {
                    "type": "string",
                    "description": "Teléfono de contacto"
                  },
                  "correo": {
                    "type": "string",
                    "format": "email",
                    "description": "Correo electrónico"
                  },
                  "tipoCupo": {
                    "type": "string",
                    "description": "Tipo de cupo (normal, subsidio, etc.)"
                  },
                  "viveCon": {
                    "type": "string",
                    "description": "Con quién vive el estudiante"
                  },
                  "idGrade": {
                    "type": "string",
                    "description": "ID del grado del estudiante"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estudiante actualizado exitosamente"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "404": {
            "description": "Estudiante no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilita un estudiante",
        "tags": [
          "StudentDatabase"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del estudiante a deshabilitar"
          }
        ],
        "responses": {
          "200": {
            "description": "Estudiante deshabilitado exitosamente"
          },
          "404": {
            "description": "Estudiante no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/cambiarEstado/{id}": {
      "put": {
        "summary": "Cambia el estado de un estudiante",
        "tags": [
          "StudentDatabase"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del estudiante cuyo estado se cambiará"
          },
          {
            "in": "query",
            "name": "estado",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "activo",
                "inactivo"
              ]
            },
            "description": "Nuevo estado del estudiante"
          }
        ],
        "responses": {
          "200": {
            "description": "Estado del estudiante cambiado exitosamente"
          },
          "400": {
            "description": "Datos inválidos o estado no válido"
          },
          "404": {
            "description": "Estudiante no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/studentDatabase/contarEstado/{estadoEstudiante}": {
      "get": {
        "summary": "Cuenta el número de estudiantes por estado",
        "tags": [
          "StudentDatabase"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "estadoEstudiante",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "activo",
                "inactivo"
              ]
            },
            "description": "Estado del estudiante para contar"
          }
        ],
        "responses": {
          "200": {
            "description": "Cantidad de estudiantes por estado"
          },
          "400": {
            "description": "Estado inválido"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/teacher/listarTeachers": {
      "get": {
        "summary": "Lista todos los profesores",
        "tags": [
          "Teacher"
        ],
        "responses": {
          "200": {
            "description": "Lista de profesores"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/teacher/listarTeacher/{name}": {
      "get": {
        "summary": "Obtiene un profesor por nombre",
        "tags": [
          "Teacher"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Nombre del profesor"
          }
        ],
        "responses": {
          "200": {
            "description": "Información del profesor"
          },
          "404": {
            "description": "Profesor no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/teacher/listarTeacherId/{id}": {
      "get": {
        "summary": "Obtiene un profesor por ID",
        "tags": [
          "Teacher"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del profesor"
          }
        ],
        "responses": {
          "200": {
            "description": "Información del profesor"
          },
          "404": {
            "description": "Profesor no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/teacher/crearTeacher": {
      "post": {
        "summary": "Crea un nuevo profesor",
        "tags": [
          "Teacher"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nombre del profesor"
                  },
                  "course": {
                    "type": "string",
                    "description": "Curso que imparte"
                  },
                  "email": {
                    "type": "string",
                    "description": "Correo electrónico del profesor"
                  },
                  "number": {
                    "type": "string",
                    "description": "Número de contacto del profesor"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profesor creado exitosamente"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/teacher/actualizarTeacher/{id}": {
      "put": {
        "summary": "Actualiza un profesor existente",
        "tags": [
          "Teacher"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del profesor a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nombre del profesor"
                  },
                  "course": {
                    "type": "string",
                    "description": "Curso que imparte"
                  },
                  "email": {
                    "type": "string",
                    "description": "Correo electrónico del profesor"
                  },
                  "number": {
                    "type": "string",
                    "description": "Número de contacto del profesor"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profesor actualizado exitosamente"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "404": {
            "description": "Profesor no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/teacher/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilita un profesor",
        "tags": [
          "Teacher"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del profesor a deshabilitar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de habilitación del profesor (true o false)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profesor deshabilitado exitosamente"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "404": {
            "description": "Profesor no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/technical/listarTechnicals": {
      "get": {
        "summary": "Lista todos los técnicos",
        "tags": [
          "Technical"
        ],
        "responses": {
          "200": {
            "description": "Lista de técnicos obtenida exitosamente"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/technical/listarTechnical/{course}": {
      "get": {
        "summary": "Obtiene los técnicos para un curso específico",
        "tags": [
          "Technical"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "course",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Nombre del curso para el cual obtener técnicos"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de técnicos para el curso obtenida exitosamente"
          },
          "404": {
            "description": "Curso no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/technical/listarTechnicalId/{id}": {
      "get": {
        "summary": "Obtiene un técnico específico por ID",
        "tags": [
          "Technical"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del técnico a obtener"
          }
        ],
        "responses": {
          "200": {
            "description": "Técnico obtenido exitosamente"
          },
          "404": {
            "description": "Técnico no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/technical/crearTechnical": {
      "post": {
        "summary": "Crea un nuevo técnico",
        "tags": [
          "Technical"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "course": {
                    "type": "string",
                    "description": "Nombre del curso"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de inicio"
                  },
                  "finalDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha final"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Precio del curso"
                  },
                  "idTeacher": {
                    "type": "string",
                    "description": "ID del profesor"
                  },
                  "startHour": {
                    "type": "string",
                    "description": "Hora de inicio"
                  },
                  "finalHour": {
                    "type": "string",
                    "description": "Hora final"
                  },
                  "description": {
                    "type": "string",
                    "description": "Descripción del curso"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Técnico creado exitosamente"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/technical/actualizarTechnical/{id}": {
      "put": {
        "summary": "Actualiza un técnico existente",
        "tags": [
          "Technical"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del técnico a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "course": {
                    "type": "string",
                    "description": "Nombre del curso"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de inicio"
                  },
                  "finalDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha final"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Precio del curso"
                  },
                  "idTeacher": {
                    "type": "string",
                    "description": "ID del profesor"
                  },
                  "startHour": {
                    "type": "string",
                    "description": "Hora de inicio"
                  },
                  "finalHour": {
                    "type": "string",
                    "description": "Hora final"
                  },
                  "description": {
                    "type": "string",
                    "description": "Descripción del curso"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Técnico actualizado exitosamente"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "404": {
            "description": "Técnico no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/technical/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilita un técnico",
        "tags": [
          "Technical"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del técnico a deshabilitar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de habilitación del técnico (true o false)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Técnico deshabilitado exitosamente"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "404": {
            "description": "Técnico no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/technical/pago": {
      "post": {
        "summary": "Realiza un pago para un técnico",
        "tags": [
          "Technical"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "monto": {
                    "type": "number",
                    "format": "float",
                    "description": "Monto del pago"
                  },
                  "idTechnical": {
                    "type": "string",
                    "description": "ID del técnico al que se realiza el pago"
                  },
                  "metodoPago": {
                    "type": "string",
                    "description": "Método de pago utilizado"
                  },
                  "idEstudiante": {
                    "type": "string",
                    "description": "ID del estudiante que realiza el pago"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pago registrado exitosamente"
          },
          "400": {
            "description": "Error en los datos proporcionados"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/transportationRequest/listarTransportationsRequests": {
      "get": {
        "summary": "Lista todas las solicitudes de transporte",
        "tags": [
          "TransportationRequest"
        ],
        "responses": {
          "200": {
            "description": "Lista de solicitudes de transporte obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID de la solicitud"
                      },
                      "estudianteid": {
                        "type": "string",
                        "description": "ID del estudiante"
                      },
                      "acudienteid": {
                        "type": "string",
                        "description": "ID del acudiente"
                      },
                      "estado": {
                        "type": "string",
                        "description": "Estado de la solicitud"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/transportationRequest/listarTransportationsRequest/{id}": {
      "get": {
        "summary": "Obtiene una solicitud de transporte por su ID",
        "tags": [
          "TransportationRequest"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID de la solicitud de transporte"
          }
        ],
        "responses": {
          "200": {
            "description": "Solicitud de transporte obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID de la solicitud"
                    },
                    "estudianteid": {
                      "type": "string",
                      "description": "ID del estudiante"
                    },
                    "acudienteid": {
                      "type": "string",
                      "description": "ID del acudiente"
                    },
                    "estado": {
                      "type": "string",
                      "description": "Estado de la solicitud"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Solicitud de transporte no encontrada"
          }
        }
      }
    },
    "/transportationRequest/listarTransportationsRequests/{estudianteid}/{acudienteid}": {
      "get": {
        "summary": "Obtiene solicitudes de transporte por estudiante y acudiente",
        "tags": [
          "TransportationRequest"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "estudianteid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del estudiante"
          },
          {
            "in": "path",
            "name": "acudienteid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del acudiente"
          }
        ],
        "responses": {
          "200": {
            "description": "Solicitudes de transporte obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID de la solicitud"
                      },
                      "estado": {
                        "type": "string",
                        "description": "Estado de la solicitud"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Solicitudes de transporte no encontradas"
          }
        }
      }
    },
    "/transportationRequest/aprobarSolicitud/{id}": {
      "put": {
        "summary": "Aprueba una solicitud de transporte",
        "tags": [
          "TransportationRequest"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID de la solicitud de transporte"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "estado": {
                    "type": "string",
                    "description": "Estado de la solicitud"
                  },
                  "routeid": {
                    "type": "string",
                    "description": "ID de la ruta"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Solicitud aprobada exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/transportationRequest/crearTransportationRequest": {
      "post": {
        "summary": "Crea una nueva solicitud de transporte",
        "tags": [
          "TransportationRequest"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "routeid": {
                    "type": "string",
                    "description": "ID de la ruta"
                  },
                  "acudienteid": {
                    "type": "string",
                    "description": "ID del acudiente"
                  },
                  "estado": {
                    "type": "string",
                    "description": "Estado de la solicitud"
                  },
                  "routeType": {
                    "type": "string",
                    "description": "Tipo de ruta"
                  },
                  "datosResponsable": {
                    "type": "string",
                    "description": "Datos del responsable"
                  },
                  "direccion_recogida": {
                    "type": "string",
                    "description": "Dirección de recogida"
                  },
                  "direccion_entrega": {
                    "type": "string",
                    "description": "Dirección de entrega"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Solicitud de transporte creada exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/transportation/listarTransportations": {
      "get": {
        "summary": "Lista todas las rutas de transporte",
        "tags": [
          "Transportation"
        ],
        "responses": {
          "200": {
            "description": "Lista de todas las rutas de transporte obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID de la ruta"
                      },
                      "routeName": {
                        "type": "string",
                        "description": "Nombre de la ruta"
                      },
                      "routeNumber": {
                        "type": "string",
                        "description": "Número de la ruta"
                      },
                      "responsible": {
                        "type": "string",
                        "description": "Responsable de la ruta"
                      },
                      "direccion_entrega": {
                        "type": "string",
                        "description": "Dirección de entrega"
                      },
                      "direccion_recogida": {
                        "type": "string",
                        "description": "Dirección de recogida"
                      },
                      "jornada": {
                        "type": "string",
                        "description": "Jornada de la ruta"
                      },
                      "descripcion": {
                        "type": "string",
                        "description": "Descripción de la ruta"
                      },
                      "routeType": {
                        "type": "string",
                        "description": "Tipo de ruta"
                      },
                      "price": {
                        "type": "number",
                        "description": "Precio de la ruta"
                      },
                      "cupo": {
                        "type": "number",
                        "description": "Cupo total"
                      },
                      "cupo_disponible": {
                        "type": "number",
                        "description": "Cupo disponible"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/transportation/listarTransportations/{jornada}": {
      "get": {
        "summary": "Lista las rutas de transporte por jornada",
        "tags": [
          "Transportation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jornada",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Jornada de la ruta"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de rutas de transporte obtenida exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Rutas no encontradas para la jornada proporcionada"
          }
        }
      }
    },
    "/transportation/listarTransportation/{routeName}": {
      "get": {
        "summary": "Obtiene una ruta de transporte por su nombre",
        "tags": [
          "Transportation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "routeName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Nombre de la ruta"
          }
        ],
        "responses": {
          "200": {
            "description": "Ruta de transporte obtenida exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Ruta no encontrada"
          }
        }
      }
    },
    "/transportation/listarTransportationId/{id}": {
      "get": {
        "summary": "Obtiene una ruta de transporte por su ID",
        "tags": [
          "Transportation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID de la ruta"
          }
        ],
        "responses": {
          "200": {
            "description": "Ruta de transporte obtenida exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Ruta no encontrada"
          }
        }
      }
    },
    "/transportation/crearTransportation": {
      "post": {
        "summary": "Crea una nueva ruta de transporte",
        "tags": [
          "Transportation"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "routeName": {
                    "type": "string",
                    "description": "Nombre de la ruta"
                  },
                  "routeNumber": {
                    "type": "string",
                    "description": "Número de la ruta"
                  },
                  "responsible": {
                    "type": "string",
                    "description": "Responsable de la ruta"
                  },
                  "direccion_entrega": {
                    "type": "string",
                    "description": "Dirección de entrega"
                  },
                  "direccion_recogida": {
                    "type": "string",
                    "description": "Dirección de recogida"
                  },
                  "jornada": {
                    "type": "string",
                    "description": "Jornada de la ruta"
                  },
                  "descripcion": {
                    "type": "string",
                    "description": "Descripción de la ruta"
                  },
                  "routeType": {
                    "type": "string",
                    "description": "Tipo de ruta"
                  },
                  "price": {
                    "type": "number",
                    "description": "Precio de la ruta"
                  },
                  "cupo": {
                    "type": "number",
                    "description": "Cupo total"
                  },
                  "cupo_disponible": {
                    "type": "number",
                    "description": "Cupo disponible"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ruta de transporte creada exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/transportation/actualizarTransportation/{id}": {
      "put": {
        "summary": "Actualiza una ruta de transporte existente",
        "tags": [
          "Transportation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID de la ruta a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "routeName": {
                    "type": "string",
                    "description": "Nombre de la ruta"
                  },
                  "routeNumber": {
                    "type": "string",
                    "description": "Número de la ruta"
                  },
                  "responsible": {
                    "type": "string",
                    "description": "Responsable de la ruta"
                  },
                  "direccion_recogida": {
                    "type": "string",
                    "description": "Dirección de recogida"
                  },
                  "jornada": {
                    "type": "string",
                    "description": "Jornada de la ruta"
                  },
                  "descripcion": {
                    "type": "string",
                    "description": "Descripción de la ruta"
                  },
                  "routeType": {
                    "type": "string",
                    "description": "Tipo de ruta"
                  },
                  "price": {
                    "type": "number",
                    "description": "Precio de la ruta"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ruta de transporte actualizada exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Ruta no encontrada"
          }
        }
      }
    },
    "/transportation/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilita una ruta de transporte",
        "tags": [
          "Transportation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID de la ruta a deshabilitar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "description": "Estado de la ruta (true para activa, false para deshabilitada)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ruta de transporte deshabilitada exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Ruta no encontrada"
          }
        }
      }
    },
    "/tuition/listarTuitions": {
      "get": {
        "summary": "Lista todos los tipos de matrículas",
        "tags": [
          "Tuition"
        ],
        "responses": {
          "200": {
            "description": "Lista de tipos de matrículas obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID del tipo de matrícula"
                      },
                      "description": {
                        "type": "string",
                        "description": "Descripción del tipo de matrícula"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/tuition/listarTuition/{description}": {
      "get": {
        "summary": "Obtiene un tipo de matrícula por su descripción",
        "tags": [
          "Tuition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "description",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Descripción del tipo de matrícula"
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de matrícula obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID del tipo de matrícula"
                    },
                    "description": {
                      "type": "string",
                      "description": "Descripción del tipo de matrícula"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Tipo de matrícula no encontrado"
          }
        }
      }
    },
    "/tuition/CrearTuition": {
      "get": {
        "summary": "Crea un nuevo tipo de matrícula",
        "tags": [
          "Tuition"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tuition": {
                    "type": "string",
                    "description": "Descripción de la matrícula",
                    "example": "Matrícula regular"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tipo de matrícula creado exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/tuitionType/listarTuitionTypes": {
      "get": {
        "summary": "Lista todos los tipos de matrícula",
        "tags": [
          "Tuition Type"
        ],
        "responses": {
          "200": {
            "description": "Lista de tipos de matrícula"
          }
        }
      }
    },
    "/tuitionType/CrearTuitionType": {
      "post": {
        "summary": "Crea un nuevo tipo de matrícula",
        "tags": [
          "Tuition Type"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "grade",
                  "startDate",
                  "orginary_price",
                  "extraordinary_startDate",
                  "extraordinary_finalDate",
                  "extraordinary_price"
                ],
                "properties": {
                  "grade": {
                    "type": "string",
                    "example": "Primero"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "orginary_price": {
                    "type": "number"
                  },
                  "extraordinary_startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "extraordinary_finalDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "extraordinary_price": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tipo de matrícula creado exitosamente"
          }
        }
      }
    },
    "/tuitionType/listarTuitionId/{id}": {
      "get": {
        "summary": "Obtiene un tipo de matrícula por ID",
        "tags": [
          "Tuition Type"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del tipo de matrícula",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de matrícula encontrado"
          },
          "404": {
            "description": "Tipo de matrícula no encontrado"
          }
        }
      }
    },
    "/tuitionType/actualizarTuition/{id}": {
      "put": {
        "summary": "Actualiza un tipo de matrícula por ID",
        "tags": [
          "Tuition Type"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del tipo de matrícula",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "grade",
                  "startDate",
                  "orginary_price",
                  "extraordinary_startDate",
                  "extraordinary_finalDate",
                  "extraordinary_price"
                ],
                "properties": {
                  "grade": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "orginary_price": {
                    "type": "number"
                  },
                  "extraordinary_startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "extraordinary_finalDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "extraordinary_price": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tipo de matrícula actualizado exitosamente"
          },
          "404": {
            "description": "Tipo de matrícula no encontrado"
          }
        }
      }
    },
    "/tuitionType/deshabilitar/{id}": {
      "put": {
        "summary": "Deshabilita un tipo de matrícula por ID",
        "tags": [
          "Tuition Type"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID del tipo de matrícula",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "isActive"
                ],
                "properties": {
                  "isActive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tipo de matrícula deshabilitado exitosamente"
          },
          "404": {
            "description": "Tipo de matrícula no encontrado"
          }
        }
      }
    },
    "/user/listarUsuarios": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Consultar Usuarios",
        "description": "Obtener todos los usuarios.",
        "responses": {
          "200": {
            "description": "Consulta con éxito"
          },
          "401": {
            "description": "Error no autorizado"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/listarUsuario/{id}": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Consultar Usuario por ID",
        "description": "Obtener un usuario por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del usuario",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario encontrado"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/user/listarUsuarioEmail/{email}": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Consultar Usuario por Email",
        "description": "Obtener un usuario por su email.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "Email del usuario",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario encontrado"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/user/agregarUsuario": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Agregar un nuevo usuario",
        "description": "Agregar un nuevo usuario al sistema.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "idRole": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario creado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/user/actualizarUsuario/{id}": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Actualizar usuario",
        "description": "Actualizar los datos de un usuario existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del usuario a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "idRole": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/user/deshabilitarUsuario/{id}": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Deshabilitar usuario",
        "description": "Deshabilitar un usuario en el sistema.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del usuario a deshabilitar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario deshabilitado con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/user/recuperarPass/{email}": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Recuperar contraseña",
        "description": "Enviar un correo para recuperar la contraseña.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "Email del usuario para recuperar la contraseña",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correo enviado con éxito"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/user/nuevaContrasena/{id}": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Establecer nueva contraseña",
        "description": "Establecer una nueva contraseña para el usuario.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del usuario",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPass": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contraseña actualizada con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/user/nuevaContrasenaConfirm/{id}": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Confirmar nueva contraseña",
        "description": "Confirmar y actualizar la nueva contraseña.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID del usuario",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPass": {
                    "type": "string"
                  },
                  "passActual": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contraseña confirmada y actualizada con éxito"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        }
      }
    },
    "/user/generarCaptcha": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Generar CAPTCHA",
        "description": "Genera un CAPTCHA aleatorio.",
        "responses": {
          "200": {
            "description": "CAPTCHA generado con éxito",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "captcha": {
                      "type": "string",
                      "description": "Código CAPTCHA generado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error al generar el CAPTCHA"
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}